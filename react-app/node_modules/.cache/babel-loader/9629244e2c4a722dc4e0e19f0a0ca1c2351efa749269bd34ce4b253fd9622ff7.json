{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ramith\\\\Projects\\\\Application Scanner\\\\scanner-app\\\\src\\\\components\\\\UploadForm.js\",\n  _s = $RefreshSig$();\n// frontend/src/UploadForm.js\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UploadForm(_ref) {\n  _s();\n  let {\n    onImageUpload\n  } = _ref;\n  const [imageData, setImageData] = useState('');\n  const [processedImageData, setProcessedImageData] = useState('');\n  const handleImageChange = e => {\n    const file = e.target.files[0];\n    const reader = new FileReader();\n    reader.onloadend = () => {\n      setImageData(reader.result);\n    };\n    if (file) {\n      reader.readAsDataURL(file);\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    onImageUpload(imageData);\n  };\n  useEffect(() => {\n    // Update the processedImageData when the server response changes\n    if (processedImageData) {\n      document.getElementById('processed-image').src = processedImageData;\n    }\n  }, [processedImageData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload and Process Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".jpg,.jpeg,.png\",\n        onChange: handleImageChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Process Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: processedImageData && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Processed Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          id: \"processed-image\",\n          alt: \"Processed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(UploadForm, \"EEMIxgjVbppX234HAh8/KgOa1hk=\");\n_c = UploadForm;\nexport default UploadForm;\nvar _c;\n$RefreshReg$(_c, \"UploadForm\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","UploadForm","_ref","_s","onImageUpload","imageData","setImageData","processedImageData","setProcessedImageData","handleImageChange","e","file","target","files","reader","FileReader","onloadend","result","readAsDataURL","handleSubmit","preventDefault","document","getElementById","src","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","accept","onChange","id","alt","_c","$RefreshReg$"],"sources":["C:/Users/Ramith/Projects/Application Scanner/scanner-app/src/components/UploadForm.js"],"sourcesContent":["// frontend/src/UploadForm.js\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nfunction UploadForm({ onImageUpload }) {\r\n  const [imageData, setImageData] = useState('');\r\n  const [processedImageData, setProcessedImageData] = useState('');\r\n\r\n  const handleImageChange = (e) => {\r\n    const file = e.target.files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = () => {\r\n      setImageData(reader.result);\r\n    };\r\n    if (file) {\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    onImageUpload(imageData);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Update the processedImageData when the server response changes\r\n    if (processedImageData) {\r\n      document.getElementById('processed-image').src = processedImageData;\r\n    }\r\n  }, [processedImageData]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Upload and Process Image</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input type=\"file\" accept=\".jpg,.jpeg,.png\" onChange={handleImageChange} />\r\n        <button type=\"submit\">Process Image</button>\r\n      </form>\r\n      <div>\r\n        {processedImageData && (\r\n          <div>\r\n            <h2>Processed Image</h2>\r\n            <img id=\"processed-image\" alt=\"Processed\" />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UploadForm;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,UAAUA,CAAAC,IAAA,EAAoB;EAAAC,EAAA;EAAA,IAAnB;IAAEC;EAAc,CAAC,GAAAF,IAAA;EACnC,MAAM,CAACG,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACU,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEhE,MAAMY,iBAAiB,GAAIC,CAAC,IAAK;IAC/B,MAAMC,IAAI,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAC9B,MAAMC,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;IAC/BD,MAAM,CAACE,SAAS,GAAG,MAAM;MACvBV,YAAY,CAACQ,MAAM,CAACG,MAAM,CAAC;IAC7B,CAAC;IACD,IAAIN,IAAI,EAAE;MACRG,MAAM,CAACI,aAAa,CAACP,IAAI,CAAC;IAC5B;EACF,CAAC;EAED,MAAMQ,YAAY,GAAIT,CAAC,IAAK;IAC1BA,CAAC,CAACU,cAAc,CAAC,CAAC;IAClBhB,aAAa,CAACC,SAAS,CAAC;EAC1B,CAAC;EAEDP,SAAS,CAAC,MAAM;IACd;IACA,IAAIS,kBAAkB,EAAE;MACtBc,QAAQ,CAACC,cAAc,CAAC,iBAAiB,CAAC,CAACC,GAAG,GAAGhB,kBAAkB;IACrE;EACF,CAAC,EAAE,CAACA,kBAAkB,CAAC,CAAC;EAExB,oBACEP,OAAA;IAAAwB,QAAA,gBACExB,OAAA;MAAAwB,QAAA,EAAI;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjC5B,OAAA;MAAM6B,QAAQ,EAAEV,YAAa;MAAAK,QAAA,gBAC3BxB,OAAA;QAAO8B,IAAI,EAAC,MAAM;QAACC,MAAM,EAAC,iBAAiB;QAACC,QAAQ,EAAEvB;MAAkB;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC3E5B,OAAA;QAAQ8B,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC,eACP5B,OAAA;MAAAwB,QAAA,EACGjB,kBAAkB,iBACjBP,OAAA;QAAAwB,QAAA,gBACExB,OAAA;UAAAwB,QAAA,EAAI;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACxB5B,OAAA;UAAKiC,EAAE,EAAC,iBAAiB;UAACC,GAAG,EAAC;QAAW;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzC;IACN;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACzB,EAAA,CA5CQF,UAAU;AAAAkC,EAAA,GAAVlC,UAAU;AA8CnB,eAAeA,UAAU;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}