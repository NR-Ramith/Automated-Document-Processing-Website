{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ramith\\\\Projects\\\\Application Scanner\\\\scanner-app\\\\src\\\\components\\\\Menu.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport './Home.css';\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Menu = () => {\n  _s();\n  const [processedImage, setProcessedImage] = useState(null);\n  // const path = require('path');\n  // const fs = require('fs');\n  // const passportImagePath = path.join(__dirname, 'res_image.jpeg');\n  const handleImageUpload = async imageData => {\n    try {\n      const response = await axios.post('http://localhost:5000/processImage', {\n        imageData\n      });\n      // console.log(response);\n      // setProcessedImage(response.data);\n      // const processedImageUrl = URL.createObjectURL(response.data);\n      // const fetchresponse = await fetch(response.data); // Replace with the actual path\n      console.log(response);\n      // const imageBlob = await response.data.blob();\n      // setProcessedImage(URL.createObjectURL(imageBlob));\n      const blob = new Blob([response.data], {\n        type: 'image/jpeg'\n      });\n      // saveAs(blob, \"my-image.jpeg\");\n\n      const blobURL = URL.createObjectURL(blob);\n      console.log(blobURL); // Check the console to see if it's a valid Blob\n      setProcessedImage(blobURL);\n      // Save the buffer as a temporary image\n      // console.log(response);\n      // fs.writeFile(passportImagePath, response, (err) => {\n      //   if (err) {\n      //     console.error(err);\n      //   }});\n      // const buffer = Buffer.from(response.data, 'binary'); // Convert image data to Buffer\n      // const blob = new Blob([response.data], { type: 'image/jpeg' }); // Create Blob from Buffer\n      // setProcessedImage(URL.createObjectURL(blob)); // Convert Blob to URL\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  useEffect(() => {\n    console.log('Processed image changed:', processedImage);\n  }, [processedImage]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"menu\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Do not have the filled application form?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/chatBot\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Try ChatBot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_s(Menu, \"pHlMN/vdNVIxKseDkiZZltjiGXs=\");\n_c = Menu;\nexport default Menu;\nvar _c;\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"names":["React","Link","jsxDEV","_jsxDEV","Menu","_s","processedImage","setProcessedImage","useState","handleImageUpload","imageData","response","axios","post","console","log","blob","Blob","data","type","blobURL","URL","createObjectURL","error","useEffect","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["C:/Users/Ramith/Projects/Application Scanner/scanner-app/src/components/Menu.js"],"sourcesContent":["import React from \"react\";\r\nimport './Home.css';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Menu = () => {\r\n\r\n    const [processedImage, setProcessedImage] = useState(null);\r\n  // const path = require('path');\r\n  // const fs = require('fs');\r\n  // const passportImagePath = path.join(__dirname, 'res_image.jpeg');\r\n  const handleImageUpload = async (imageData) => {\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/processImage', {\r\n        imageData,\r\n      });\r\n      // console.log(response);\r\n      // setProcessedImage(response.data);\r\n      // const processedImageUrl = URL.createObjectURL(response.data);\r\n      // const fetchresponse = await fetch(response.data); // Replace with the actual path\r\n      console.log(response);\r\n      // const imageBlob = await response.data.blob();\r\n      // setProcessedImage(URL.createObjectURL(imageBlob));\r\n      const blob = new Blob([response.data], { type: 'image/jpeg' });\r\n      // saveAs(blob, \"my-image.jpeg\");\r\n\r\n      const blobURL = URL.createObjectURL(blob);\r\n      console.log(blobURL); // Check the console to see if it's a valid Blob\r\n      setProcessedImage(blobURL);\r\n      // Save the buffer as a temporary image\r\n      // console.log(response);\r\n      // fs.writeFile(passportImagePath, response, (err) => {\r\n      //   if (err) {\r\n      //     console.error(err);\r\n      //   }});\r\n      // const buffer = Buffer.from(response.data, 'binary'); // Convert image data to Buffer\r\n      // const blob = new Blob([response.data], { type: 'image/jpeg' }); // Create Blob from Buffer\r\n      // setProcessedImage(URL.createObjectURL(blob)); // Convert Blob to URL\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log('Processed image changed:', processedImage);\r\n  }, [processedImage]);\r\n    return (\r\n        <div className=\"menu\">\r\n            <p>Do not have the filled application form?</p>\r\n            <Link to=\"/chatBot\">\r\n                <button>Try ChatBot</button>\r\n            </Link>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Menu;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,YAAY;AACnB,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEf,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGC,QAAQ,CAAC,IAAI,CAAC;EAC5D;EACA;EACA;EACA,MAAMC,iBAAiB,GAAG,MAAOC,SAAS,IAAK;IAC7C,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACC,IAAI,CAAC,oCAAoC,EAAE;QACtEH;MACF,CAAC,CAAC;MACF;MACA;MACA;MACA;MACAI,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAAC;MACrB;MACA;MACA,MAAMK,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACN,QAAQ,CAACO,IAAI,CAAC,EAAE;QAAEC,IAAI,EAAE;MAAa,CAAC,CAAC;MAC9D;;MAEA,MAAMC,OAAO,GAAGC,GAAG,CAACC,eAAe,CAACN,IAAI,CAAC;MACzCF,OAAO,CAACC,GAAG,CAACK,OAAO,CAAC,CAAC,CAAC;MACtBb,iBAAiB,CAACa,OAAO,CAAC;MAC1B;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACF,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdT,OAAO,CAACS,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;EAEDC,SAAS,CAAC,MAAM;IACdV,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAET,cAAc,CAAC;EACzD,CAAC,EAAE,CAACA,cAAc,CAAC,CAAC;EAClB,oBACIH,OAAA;IAAKsB,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACjBvB,OAAA;MAAAuB,QAAA,EAAG;IAAwC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAC/C3B,OAAA,CAACF,IAAI;MAAC8B,EAAE,EAAC,UAAU;MAAAL,QAAA,eACfvB,OAAA;QAAAuB,QAAA,EAAQ;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd,CAAC;AAACzB,EAAA,CAjDID,IAAI;AAAA4B,EAAA,GAAJ5B,IAAI;AAmDV,eAAeA,IAAI;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}