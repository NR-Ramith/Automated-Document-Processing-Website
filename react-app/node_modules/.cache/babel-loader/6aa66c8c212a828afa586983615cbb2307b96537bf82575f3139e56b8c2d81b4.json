{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ramith\\\\Projects\\\\Application Scanner\\\\scanner-app\\\\react-app\\\\src\\\\components\\\\ViewFinalData.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport axios from './axios-object';\nimport { getTemplateId, getDId, getStateValue, getAllFieldValues } from './values';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing.unit * 2,\n    color: theme.palette.text.secondary\n  },\n  finalpaper: {\n    // padding: theme.spacing.unit * 2,\n    color: theme.palette.text.secondary,\n    position: \"relative\",\n    display: \"inline-block\"\n  },\n  image: {\n    width: '100%'\n  }\n});\nclass ViewFinalData extends Component {\n  constructor() {\n    super();\n    this.handleSubmit = () => {\n      const {\n        tid,\n        did\n      } = this.state;\n      const dataToSend = getAllFieldValues();\n\n      // Filter out key-value pairs with null values\n      const filteredData = Object.fromEntries(Object.entries(dataToSend).filter(([key, value]) => value !== null));\n\n      // Check if there are non-null values to submit\n      if (Object.keys(filteredData).length === 0) {\n        alert('No data to submit.');\n        return;\n      }\n\n      // Send a POST request to the server\n      axios.post(`http://localhost:3001/saveResponse`, filteredData).then(response => {\n        // Handle success\n        alert('Response Submitted');\n        window.history.pushState({}, null, \"/formsList\");\n        window.dispatchEvent(new Event('popstate'));\n      }).catch(error => {\n        // Handle error\n        console.error('Error submitting response:', error);\n        alert('Failed to submit response. Please try again.');\n      });\n    };\n    this.state = {\n      data: [],\n      tid: null,\n      did: null,\n      templateURL: null,\n      formImageURL: null\n    };\n  }\n  componentDidMount() {\n    let tid = getTemplateId();\n    let did = getDId();\n    this.setState({\n      tid: tid,\n      did: did\n    });\n    const url = window.URL.createObjectURL(new Blob([getStateValue(\"form-image\")]));\n    this.setState({\n      formImageURL: url\n    });\n\n    // Make a request to fetch the file data\n    axios.get('/getTemplateFile/' + tid, {\n      responseType: 'blob'\n    }).then(response => {\n      const url = window.URL.createObjectURL(new Blob([response.data]));\n      // Set the URL to a state variable\n      this.setState({\n        templateURL: url\n      });\n    });\n    const dataToSend = getAllFieldValues();\n\n    // Filter out key-value pairs with null values\n    const filteredData = Object.fromEntries(Object.entries(dataToSend).filter(([key, value]) => value !== null));\n    axios.post('/showFinalMarked/' + tid + '/' + did, filteredData).then(response => this.setState({\n      data: response.data\n    }));\n  }\n  render() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        wrap: \"nowrap\",\n        spacing: 24,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            className: classes.paper,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: this.state.formImageURL,\n              className: classes.image,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            className: classes.finalpaper,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: this.state.templateURL,\n              className: classes.image,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 29\n            }, this), this.state.data.map(function (field, key) {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: Object.keys(field).map(data => {\n                  const st2 = {\n                    location: {\n                      position: \"absolute\",\n                      margin: \"0 auto\",\n                      color: \"black\",\n                      letterSpacing: \"0.4em\",\n                      left: field[data][\"lx\"] + 0.5 + \"%\",\n                      top: field[data][\"ty\"] + \"%\"\n                    }\n                  };\n                  return /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: st2.location,\n                      children: data\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 132,\n                      columnNumber: 57\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 132,\n                    columnNumber: 49\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 37\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        className: classes.button,\n        type: \"submit\",\n        children: \"Submit Response\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this);\n  }\n}\nViewFinalData.contextTypes = {\n  router: PropTypes.object\n};\nViewFinalData.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(ViewFinalData);","map":{"version":3,"names":["React","Component","PropTypes","withStyles","Button","Paper","Grid","axios","getTemplateId","getDId","getStateValue","getAllFieldValues","jsxDEV","_jsxDEV","styles","theme","root","flexGrow","paper","padding","spacing","unit","color","palette","text","secondary","finalpaper","position","display","image","width","ViewFinalData","constructor","handleSubmit","tid","did","state","dataToSend","filteredData","Object","fromEntries","entries","filter","key","value","keys","length","alert","post","then","response","window","history","pushState","dispatchEvent","Event","catch","error","console","data","templateURL","formImageURL","componentDidMount","setState","url","URL","createObjectURL","Blob","get","responseType","render","classes","props","className","children","container","wrap","item","xs","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","map","field","st2","location","margin","letterSpacing","left","top","style","variant","button","type","contextTypes","router","object","propTypes","isRequired"],"sources":["C:/Users/Ramith/Projects/Application Scanner/scanner-app/react-app/src/components/ViewFinalData.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport axios from './axios-object';\r\nimport { getTemplateId, getDId, getStateValue, getAllFieldValues } from './values';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing.unit * 2,\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    finalpaper: {\r\n        // padding: theme.spacing.unit * 2,\r\n        color: theme.palette.text.secondary,\r\n        position: \"relative\",\r\n        display: \"inline-block\"\r\n    },\r\n    image: {\r\n        width: '100%',\r\n    }\r\n});\r\n\r\nclass ViewFinalData extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            data: [],\r\n            tid: null,\r\n            did: null,\r\n            templateURL: null,\r\n            formImageURL: null,\r\n        }\r\n    }\r\n\r\n    static contextTypes = {\r\n        router: PropTypes.object,\r\n    }\r\n\r\n    componentDidMount() {\r\n        let tid = getTemplateId();\r\n        let did = getDId();\r\n        this.setState({ tid: tid, did: did });\r\n\r\n        const url = window.URL.createObjectURL(new Blob([getStateValue(\"form-image\")]));\r\n        this.setState({ formImageURL: url });\r\n\r\n        // Make a request to fetch the file data\r\n        axios.get('/getTemplateFile/' + tid, { responseType: 'blob' })\r\n            .then((response) => {\r\n                const url = window.URL.createObjectURL(new Blob([response.data]));\r\n                // Set the URL to a state variable\r\n                this.setState({ templateURL: url });\r\n            });\r\n\r\n        const dataToSend = getAllFieldValues();\r\n\r\n        // Filter out key-value pairs with null values\r\n        const filteredData = Object.fromEntries(\r\n            Object.entries(dataToSend).filter(([key, value]) => value !== null)\r\n        );\r\n\r\n        axios.post('/showFinalMarked/' + tid + '/' + did, filteredData)\r\n            .then(response => this.setState({ data: response.data }));\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        const { tid, did } = this.state;\r\n\r\n        const dataToSend = getAllFieldValues();\r\n\r\n        // Filter out key-value pairs with null values\r\n        const filteredData = Object.fromEntries(\r\n            Object.entries(dataToSend).filter(([key, value]) => value !== null)\r\n        );\r\n\r\n        // Check if there are non-null values to submit\r\n        if (Object.keys(filteredData).length === 0) {\r\n            alert('No data to submit.');\r\n            return;\r\n        }\r\n\r\n        // Send a POST request to the server\r\n        axios.post(`http://localhost:3001/saveResponse`, filteredData)\r\n            .then(response => {\r\n                // Handle success\r\n                alert('Response Submitted');\r\n                window.history.pushState({}, null, \"/formsList\");\r\n                window.dispatchEvent(new Event('popstate'));\r\n            })\r\n            .catch(error => {\r\n                // Handle error\r\n                console.error('Error submitting response:', error);\r\n                alert('Failed to submit response. Please try again.');\r\n            });\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div className={classes.root}>\r\n                <Grid container wrap=\"nowrap\" spacing={24}>\r\n                    <Grid item xs={6}>\r\n                        <Paper className={classes.paper}>\r\n                            <img src={this.state.formImageURL} className={classes.image} alt='' />\r\n                        </Paper>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <Paper className={classes.finalpaper}>\r\n                            <img src={this.state.templateURL} className={classes.image} alt='' />\r\n\r\n                            {this.state.data.map(function (field, key) {\r\n                                return (\r\n                                    <div>\r\n                                        {Object.keys(field).map(data => {\r\n                                            const st2 = {\r\n                                                location: {\r\n                                                    position: \"absolute\",\r\n                                                    margin: \"0 auto\",\r\n                                                    color: \"black\",\r\n                                                    letterSpacing: \"0.4em\",\r\n                                                    left: field[data][\"lx\"] + 0.5 + \"%\",\r\n                                                    top: field[data][\"ty\"] + \"%\",\r\n                                                }\r\n                                            }\r\n                                            return (\r\n                                                <strong><div style={st2.location}>{data}</div></strong>\r\n                                            )\r\n                                        })}\r\n                                    </div>\r\n                                )\r\n                            })}\r\n\r\n                        </Paper>\r\n                    </Grid>\r\n                </Grid>\r\n                <Button variant=\"contained\" color=\"primary\" className={classes.button} type=\"submit\">\r\n                    Submit Response\r\n                </Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nViewFinalData.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(ViewFinalData);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}