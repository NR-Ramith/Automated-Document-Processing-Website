{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ramith\\\\Projects\\\\Application Scanner\\\\scanner-app\\\\src\\\\components\\\\UploadForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UploadForm(_ref) {\n  _s();\n  let {\n    onImageUpload\n  } = _ref;\n  const [imageData, setImageData] = useState(null);\n  const [processing, setProcessing] = useState(false);\n  const handleImageChange = e => {\n    const file = e.target.files[0];\n    const reader = new FileReader();\n    reader.onloadend = () => {\n      setImageData(reader.result);\n    };\n    if (file) {\n      reader.readAsDataURL(file);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!imageData) {\n      return;\n    }\n    setProcessing(true);\n    try {\n      const response = await fetch('http://localhost:5000/processImage', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          imageData\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        onImageUpload(data.imagePath);\n      } else {\n        console.error('Image processing failed.');\n      }\n    } catch (error) {\n      console.error('Server error:', error);\n    }\n    setProcessing(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".jpg,.jpeg,.png\",\n        onChange: handleImageChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: processing,\n        children: processing ? 'Processing...' : 'Process Image'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(UploadForm, \"EuQaFIGCZfKnXghWDBlz77yPZmY=\");\n_c = UploadForm;\nexport default UploadForm;\nvar _c;\n$RefreshReg$(_c, \"UploadForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","UploadForm","_ref","_s","onImageUpload","imageData","setImageData","processing","setProcessing","handleImageChange","e","file","target","files","reader","FileReader","onloadend","result","readAsDataURL","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","data","json","imagePath","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","accept","onChange","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Ramith/Projects/Application Scanner/scanner-app/src/components/UploadForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction UploadForm({ onImageUpload }) {\r\n  const [imageData, setImageData] = useState(null);\r\n  const [processing, setProcessing] = useState(false);\r\n\r\n  const handleImageChange = (e) => {\r\n    const file = e.target.files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = () => {\r\n      setImageData(reader.result);\r\n    };\r\n    if (file) {\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!imageData) {\r\n      return;\r\n    }\r\n\r\n    setProcessing(true);\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/processImage', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ imageData }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        onImageUpload(data.imagePath);\r\n      } else {\r\n        console.error('Image processing failed.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Server error:', error);\r\n    }\r\n\r\n    setProcessing(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Upload Image</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input type=\"file\" accept=\".jpg,.jpeg,.png\" onChange={handleImageChange} />\r\n        <button type=\"submit\" disabled={processing}>\r\n          {processing ? 'Processing...' : 'Process Image'}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UploadForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,UAAUA,CAAAC,IAAA,EAAoB;EAAAC,EAAA;EAAA,IAAnB;IAAEC;EAAc,CAAC,GAAAF,IAAA;EACnC,MAAM,CAACG,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMW,iBAAiB,GAAIC,CAAC,IAAK;IAC/B,MAAMC,IAAI,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAC9B,MAAMC,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;IAC/BD,MAAM,CAACE,SAAS,GAAG,MAAM;MACvBV,YAAY,CAACQ,MAAM,CAACG,MAAM,CAAC;IAC7B,CAAC;IACD,IAAIN,IAAI,EAAE;MACRG,MAAM,CAACI,aAAa,CAACP,IAAI,CAAC;IAC5B;EACF,CAAC;EAED,MAAMQ,YAAY,GAAG,MAAOT,CAAC,IAAK;IAChCA,CAAC,CAACU,cAAc,CAAC,CAAC;IAElB,IAAI,CAACf,SAAS,EAAE;MACd;IACF;IAEAG,aAAa,CAAC,IAAI,CAAC;IAEnB,IAAI;MACF,MAAMa,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoC,EAAE;QACjEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEtB;QAAU,CAAC;MACpC,CAAC,CAAC;MAEF,IAAIgB,QAAQ,CAACO,EAAE,EAAE;QACf,MAAMC,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;QAClC1B,aAAa,CAACyB,IAAI,CAACE,SAAS,CAAC;MAC/B,CAAC,MAAM;QACLC,OAAO,CAACC,KAAK,CAAC,0BAA0B,CAAC;MAC3C;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;IACvC;IAEAzB,aAAa,CAAC,KAAK,CAAC;EACtB,CAAC;EAED,oBACER,OAAA;IAAAkC,QAAA,gBACElC,OAAA;MAAAkC,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBtC,OAAA;MAAMuC,QAAQ,EAAEpB,YAAa;MAAAe,QAAA,gBAC3BlC,OAAA;QAAOwC,IAAI,EAAC,MAAM;QAACC,MAAM,EAAC,iBAAiB;QAACC,QAAQ,EAAEjC;MAAkB;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC3EtC,OAAA;QAAQwC,IAAI,EAAC,QAAQ;QAACG,QAAQ,EAAEpC,UAAW;QAAA2B,QAAA,EACxC3B,UAAU,GAAG,eAAe,GAAG;MAAe;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACnC,EAAA,CAzDQF,UAAU;AAAA2C,EAAA,GAAV3C,UAAU;AA2DnB,eAAeA,UAAU;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}