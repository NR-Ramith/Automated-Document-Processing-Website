{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ramith\\\\Projects\\\\Application Scanner\\\\scanner-app\\\\react-app\\\\src\\\\components\\\\ViewFinalData.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport axios from './axios-object';\nimport { getTemplateId, getDId, getStateValue, getAllFieldValues, setTemplateId, setDId, resetFieldValues, resetFilledMandatoryFieldIndicator, resetStateValues, setFieldValue } from './values';\nimport './ViewFinalData.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing.unit * 2,\n    color: theme.palette.text.secondary\n  },\n  finalpaper: {\n    // padding: theme.spacing.unit * 2,\n    color: theme.palette.text.secondary,\n    position: \"relative\",\n    display: \"inline-block\"\n  },\n  image: {\n    width: '100%'\n  }\n});\nclass ViewFinalData extends Component {\n  constructor() {\n    super();\n    this.handleInputChange = e => {\n      // Access the new value from the input field\n      const newValue = e.target.value;\n      setFieldValue(e.target.getAttribute('data-field'), newValue);\n    };\n    this.handleNameChange = e => {\n      const newName = e.target.value;\n      this.setState({\n        name: newName\n      });\n    };\n    this.handleDateChange = e => {\n      const newDate = e.target.value;\n      this.setState({\n        date: newDate\n      });\n    };\n    this.getPreview = () => {\n      return Object.entries(getAllFieldValues()).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [key, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this), \" \", value]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this));\n    };\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const dataToSend = getAllFieldValues();\n\n      // Filter out key-value pairs with null values\n      const filteredData = Object.fromEntries(Object.entries(dataToSend).filter(([key, value]) => value !== null));\n\n      // Check if there are non-null values to submit\n      if (Object.keys(filteredData).length === 0) {\n        alert('No data to submit.');\n        return;\n      }\n      if (this.state.name !== null) {\n        if (this.state.date !== null) {\n          // Get today's date in the format YYYY-MM-DD\n          const today = new Date().toISOString().split('T')[0];\n\n          // Convert the entered date to the same format\n          const enteredDate = this.state.date.split('-').reverse().join('-');\n          if (today === enteredDate) {\n            filteredData['e-validation-name'] = this.state.name;\n            filteredData['e-validation-date'] = this.state.date;\n            const formData = new FormData();\n            formData.append('userInput', JSON.stringify(filteredData));\n            formData.append('selectedFormId', getTemplateId());\n            if ('passportImage' in filteredData) {\n              formData.append('passportImage', getAllFieldValues()['passportImage']);\n            }\n            let url = '';\n            if (getTemplateId < 100) url = `http://localhost:3001/saveResponse`;else url = `http://localhost:5000/submit_form${getT}`;\n\n            // Send a POST request to the server\n            fetch(`http://localhost:3001/saveResponse`, {\n              method: 'POST',\n              body: formData\n            }).then(response => {\n              if (response.status !== 200) {\n                throw new Error('Network response was not ok');\n              }\n            }).then(() => {\n              // Handle success\n              alert('Response Submitted');\n              setTemplateId(0);\n              setDId(0);\n              resetFieldValues();\n              resetFilledMandatoryFieldIndicator();\n              resetStateValues();\n              window.history.pushState({}, null, \"/formsList\");\n              window.dispatchEvent(new Event('popstate'));\n            }).catch(error => {\n              // Handle error\n              console.error('Error submitting response:', error);\n              alert('Failed to submit response. Please try again.');\n            });\n          } else {\n            alert('Enter today\\'s date.');\n          }\n        } else {\n          alert('Enter today\\'s date.');\n        }\n      } else {\n        alert('Enter your full name.');\n      }\n    };\n    this.state = {\n      data: [],\n      tid: null,\n      did: null,\n      templateURL: null,\n      formImageURL: null,\n      name: null,\n      date: null\n    };\n  }\n  componentDidMount() {\n    let tid = getTemplateId();\n    let did = getDId();\n    this.setState({\n      tid: tid,\n      did: did\n    });\n    if (getTemplateId() < 100) {\n      const url = window.URL.createObjectURL(new Blob([getStateValue(\"form-image\")]));\n      this.setState({\n        formImageURL: url\n      });\n\n      // Make a request to fetch the file data\n      axios.get('/getTemplateFile/' + tid, {\n        responseType: 'blob'\n      }).then(response => {\n        const url = window.URL.createObjectURL(new Blob([response.data]));\n        // Set the URL to a state variable\n        this.setState({\n          templateURL: url\n        });\n      });\n    }\n    const dataToSend = getAllFieldValues();\n\n    // Filter out key-value pairs with null values\n    const filteredData = Object.fromEntries(Object.entries(dataToSend).filter(([key, value]) => value !== null));\n    if (getTemplateId() < 100) {\n      axios.post('/showFinalMarked/' + tid, filteredData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      }).then(response => {\n        this.setState({\n          data: response.data\n        });\n      });\n    }\n  }\n  render() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.root,\n      children: [getTemplateId() > 100 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"preview-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Preview:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 29\n        }, this), this.getPreview()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        wrap: \"nowrap\",\n        spacing: 24,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            className: classes.paper,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: this.state.formImageURL,\n              className: classes.image,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            className: classes.finalpaper,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: this.state.templateURL,\n              className: classes.image,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 33\n            }, this), this.state.data.map((field, key) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: Object.keys(field).map(data => {\n                  const st2 = {\n                    location: {\n                      position: \"absolute\",\n                      margin: \"0 auto\",\n                      color: \"black\",\n                      letterSpacing: \"0.4em\",\n                      left: field[data][\"lx\"] + 0.5 + \"%\",\n                      top: field[data][\"ty\"] + \"%\"\n                    }\n                  };\n                  if (field[data][\"type\"] === \"Text\") {\n                    return /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        style: st2.location,\n                        children: /*#__PURE__*/_jsxDEV(\"input\", {\n                          type: \"text\",\n                          class: \"transparent-input\",\n                          placeholder: data,\n                          defaultValue: data,\n                          \"data-field\": field[data]['field'],\n                          onChange: e => this.handleInputChange(e)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 226,\n                          columnNumber: 91\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 226,\n                        columnNumber: 65\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 226,\n                      columnNumber: 57\n                    }, this);\n                  } else if (field[data][\"type\"] === \"Signature\") {\n                    if (data === 'passportImage') {\n                      if (getAllFieldValues()['passportImage'] instanceof Blob) {\n                        return /*#__PURE__*/_jsxDEV(\"div\", {\n                          style: st2.location,\n                          children: /*#__PURE__*/_jsxDEV(\"img\", {\n                            src: URL.createObjectURL(getAllFieldValues()['passportImage']),\n                            alt: \"Passport\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 234,\n                            columnNumber: 91\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 234,\n                          columnNumber: 65\n                        }, this);\n                      } else {\n                        // Convert the base64 string to binary data\n                        const binaryImageData = atob(getAllFieldValues()['passportImage']);\n                        const arrayBuffer = new ArrayBuffer(binaryImageData.length);\n                        const view = new Uint8Array(arrayBuffer);\n                        for (let i = 0; i < binaryImageData.length; i++) {\n                          view[i] = binaryImageData.charCodeAt(i);\n                        }\n                        // Create a Blob and generate a URL for displaying the image\n                        const blob = new Blob([arrayBuffer], {\n                          type: 'image/png'\n                        });\n                        setFieldValue(field[data]['field'], blob);\n                        return /*#__PURE__*/_jsxDEV(\"div\", {\n                          style: st2.location,\n                          children: /*#__PURE__*/_jsxDEV(\"img\", {\n                            src: URL.createObjectURL(blob),\n                            alt: \"Passport\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 249,\n                            columnNumber: 91\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 249,\n                          columnNumber: 65\n                        }, this);\n                      }\n                      // else {\n                      //     // Fetch the blob data from the FormData object\n                      //     console.log(\" form data - \", field[data][\"imageData\"])\n                      //     const blobData = field[data][\"imageData\"].get('image');\n                      //     return (\n                      //         <div style={st2.location}><img src={URL.createObjectURL(blobData)} alt=\"Passport\" /></div>\n                      //     )\n                      // }\n                    } else {\n                      // Convert the base64 string to binary data\n                      const binaryImageData = atob(data);\n                      const arrayBuffer = new ArrayBuffer(binaryImageData.length);\n                      const view = new Uint8Array(arrayBuffer);\n                      for (let i = 0; i < binaryImageData.length; i++) {\n                        view[i] = binaryImageData.charCodeAt(i);\n                      }\n                      // Create a Blob and generate a URL for displaying the image\n                      const blob = new Blob([arrayBuffer], {\n                        type: 'image/png'\n                      });\n                      setFieldValue('passportImage', blob);\n                      return /*#__PURE__*/_jsxDEV(\"div\", {\n                        style: st2.location,\n                        children: /*#__PURE__*/_jsxDEV(\"img\", {\n                          src: URL.createObjectURL(blob),\n                          alt: \"Passport\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 273,\n                          columnNumber: 87\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 273,\n                        columnNumber: 61\n                      }, this);\n                    }\n                  } else {\n                    return /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        style: st2.location,\n                        children: \"Nothing\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 279,\n                        columnNumber: 65\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 279,\n                      columnNumber: 57\n                    }, this);\n                  }\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 41\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: this.handleNameChange,\n          placeholder: \"Your Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: this.handleDateChange,\n          placeholder: \"Date - DD-MM-YYYY\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          className: classes.button,\n          type: \"submit\",\n          onClick: this.handleSubmit,\n          children: \"Submit Response\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }, this);\n  }\n}\nViewFinalData.contextTypes = {\n  router: PropTypes.object\n};\nViewFinalData.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(ViewFinalData);","map":{"version":3,"names":["React","Component","PropTypes","withStyles","Button","Paper","Grid","axios","getTemplateId","getDId","getStateValue","getAllFieldValues","setTemplateId","setDId","resetFieldValues","resetFilledMandatoryFieldIndicator","resetStateValues","setFieldValue","jsxDEV","_jsxDEV","styles","theme","root","flexGrow","paper","padding","spacing","unit","color","palette","text","secondary","finalpaper","position","display","image","width","ViewFinalData","constructor","handleInputChange","e","newValue","target","value","getAttribute","handleNameChange","newName","setState","name","handleDateChange","newDate","date","getPreview","Object","entries","map","key","children","fileName","_jsxFileName","lineNumber","columnNumber","handleSubmit","event","preventDefault","dataToSend","filteredData","fromEntries","filter","keys","length","alert","state","today","Date","toISOString","split","enteredDate","reverse","join","formData","FormData","append","JSON","stringify","url","getT","fetch","method","body","then","response","status","Error","window","history","pushState","dispatchEvent","Event","catch","error","console","data","tid","did","templateURL","formImageURL","componentDidMount","URL","createObjectURL","Blob","get","responseType","post","headers","render","classes","props","className","container","wrap","item","xs","src","alt","field","st2","location","margin","letterSpacing","left","top","style","type","class","placeholder","defaultValue","onChange","binaryImageData","atob","arrayBuffer","ArrayBuffer","view","Uint8Array","i","charCodeAt","blob","variant","button","onClick","contextTypes","router","object","propTypes","isRequired"],"sources":["C:/Users/Ramith/Projects/Application Scanner/scanner-app/react-app/src/components/ViewFinalData.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport axios from './axios-object';\r\nimport { getTemplateId, getDId, getStateValue, getAllFieldValues, setTemplateId, setDId, resetFieldValues, resetFilledMandatoryFieldIndicator, resetStateValues, setFieldValue } from './values';\r\nimport './ViewFinalData.css';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing.unit * 2,\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    finalpaper: {\r\n        // padding: theme.spacing.unit * 2,\r\n        color: theme.palette.text.secondary,\r\n        position: \"relative\",\r\n        display: \"inline-block\"\r\n    },\r\n    image: {\r\n        width: '100%',\r\n    }\r\n});\r\n\r\nclass ViewFinalData extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            data: [],\r\n            tid: null,\r\n            did: null,\r\n            templateURL: null,\r\n            formImageURL: null,\r\n            name: null,\r\n            date: null,\r\n        }\r\n    }\r\n\r\n    static contextTypes = {\r\n        router: PropTypes.object,\r\n    }\r\n\r\n    componentDidMount() {\r\n        let tid = getTemplateId();\r\n        let did = getDId();\r\n        this.setState({ tid: tid, did: did });\r\n\r\n        if (getTemplateId() < 100) {\r\n\r\n            const url = window.URL.createObjectURL(new Blob([getStateValue(\"form-image\")]));\r\n            this.setState({ formImageURL: url });\r\n\r\n            // Make a request to fetch the file data\r\n            axios.get('/getTemplateFile/' + tid, { responseType: 'blob' })\r\n                .then((response) => {\r\n                    const url = window.URL.createObjectURL(new Blob([response.data]));\r\n                    // Set the URL to a state variable\r\n                    this.setState({ templateURL: url });\r\n                });\r\n\r\n        }\r\n\r\n        const dataToSend = getAllFieldValues();\r\n\r\n        // Filter out key-value pairs with null values\r\n        const filteredData = Object.fromEntries(\r\n            Object.entries(dataToSend).filter(([key, value]) => value !== null)\r\n        );\r\n\r\n        if (getTemplateId() < 100) {\r\n            axios.post('/showFinalMarked/' + tid, filteredData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                },\r\n            })\r\n                .then(response => {\r\n                    this.setState({ data: response.data });\r\n                });\r\n        }\r\n    }\r\n\r\n    handleInputChange = (e) => {\r\n        // Access the new value from the input field\r\n        const newValue = e.target.value;\r\n        setFieldValue(e.target.getAttribute('data-field'), newValue);\r\n    };\r\n\r\n    handleNameChange = (e) => {\r\n        const newName = e.target.value;\r\n        this.setState({ name: newName });\r\n    };\r\n\r\n    handleDateChange = (e) => {\r\n        const newDate = e.target.value;\r\n        this.setState({ date: newDate });\r\n    };\r\n\r\n    getPreview = () => {\r\n        return Object.entries(getAllFieldValues()).map(([key, value]) => (\r\n          <p key={key}>\r\n            <strong>{key}:</strong> {value}\r\n          </p>\r\n        ));\r\n    };\r\n\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const dataToSend = getAllFieldValues();\r\n\r\n        // Filter out key-value pairs with null values\r\n        const filteredData = Object.fromEntries(\r\n            Object.entries(dataToSend).filter(([key, value]) => value !== null)\r\n        );\r\n\r\n        // Check if there are non-null values to submit\r\n        if (Object.keys(filteredData).length === 0) {\r\n            alert('No data to submit.');\r\n            return;\r\n        }\r\n\r\n        if (this.state.name !== null) {\r\n            if (this.state.date !== null) {\r\n                // Get today's date in the format YYYY-MM-DD\r\n                const today = new Date().toISOString().split('T')[0];\r\n\r\n                // Convert the entered date to the same format\r\n                const enteredDate = this.state.date.split('-').reverse().join('-');\r\n                if (today === enteredDate) {\r\n                    filteredData['e-validation-name'] = this.state.name;\r\n                    filteredData['e-validation-date'] = this.state.date;\r\n\r\n                    const formData = new FormData();\r\n                    formData.append('userInput', JSON.stringify(filteredData));\r\n                    formData.append('selectedFormId', getTemplateId());\r\n                    if ('passportImage' in filteredData) {\r\n                        formData.append('passportImage', getAllFieldValues()['passportImage']);\r\n                    }\r\n                    let url=''\r\n\r\n                    if(getTemplateId<100)\r\n                    url = `http://localhost:3001/saveResponse`;\r\n                    else\r\n                    url = `http://localhost:5000/submit_form${getT}`\r\n\r\n                    // Send a POST request to the server\r\n                    fetch(`http://localhost:3001/saveResponse`, {\r\n                        method: 'POST',\r\n                        body: formData,\r\n                    })\r\n                        .then(response => {\r\n                            if (response.status !== 200) {\r\n                                throw new Error('Network response was not ok');\r\n                            }\r\n                        })\r\n                        .then(() => {\r\n                            // Handle success\r\n                            alert('Response Submitted');\r\n                            setTemplateId(0);\r\n                            setDId(0);\r\n                            resetFieldValues();\r\n                            resetFilledMandatoryFieldIndicator();\r\n                            resetStateValues();\r\n                            window.history.pushState({}, null, \"/formsList\");\r\n                            window.dispatchEvent(new Event('popstate'));\r\n                        })\r\n                        .catch(error => {\r\n                            // Handle error\r\n                            console.error('Error submitting response:', error);\r\n                            alert('Failed to submit response. Please try again.');\r\n                        });\r\n                } else {\r\n                    alert('Enter today\\'s date.');\r\n                }\r\n            } else {\r\n                alert('Enter today\\'s date.');\r\n            }\r\n        } else {\r\n            alert('Enter your full name.');\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div className={classes.root}>\r\n                {getTemplateId()>100 ?\r\n                        <div className=\"preview-section\">\r\n                            <h3>Preview:</h3>\r\n                            {this.getPreview()}\r\n                        </div>\r\n                    :\r\n                    <Grid container wrap=\"nowrap\" spacing={24}>\r\n                        <Grid item xs={6}>\r\n                            <Paper className={classes.paper}>\r\n                                <img src={this.state.formImageURL} className={classes.image} alt='' />\r\n                            </Paper>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <Paper className={classes.finalpaper}>\r\n                                <img src={this.state.templateURL} className={classes.image} alt='' />\r\n\r\n                                {this.state.data.map((field, key) => {\r\n\r\n                                    return (\r\n                                        <div>\r\n                                            {Object.keys(field).map(data => {\r\n                                                const st2 = {\r\n                                                    location: {\r\n                                                        position: \"absolute\",\r\n                                                        margin: \"0 auto\",\r\n                                                        color: \"black\",\r\n                                                        letterSpacing: \"0.4em\",\r\n                                                        left: field[data][\"lx\"] + 0.5 + \"%\",\r\n                                                        top: field[data][\"ty\"] + \"%\",\r\n                                                    }\r\n                                                }\r\n                                                if (field[data][\"type\"] === \"Text\") {\r\n                                                    return (\r\n                                                        <strong><div style={st2.location}><input type=\"text\" class=\"transparent-input\" placeholder={data} defaultValue={data}\r\n                                                            data-field={field[data]['field']} onChange={(e) => this.handleInputChange(e)} /></div></strong>\r\n                                                    )\r\n                                                }\r\n                                                else if (field[data][\"type\"] === \"Signature\") {\r\n                                                    if (data === 'passportImage') {\r\n                                                        if (getAllFieldValues()['passportImage'] instanceof Blob) {\r\n                                                            return (\r\n                                                                <div style={st2.location}><img src={URL.createObjectURL(getAllFieldValues()['passportImage'])} alt=\"Passport\" /></div>\r\n                                                            )\r\n                                                        }\r\n                                                        else {\r\n                                                            // Convert the base64 string to binary data\r\n                                                            const binaryImageData = atob(getAllFieldValues()['passportImage']);\r\n                                                            const arrayBuffer = new ArrayBuffer(binaryImageData.length);\r\n                                                            const view = new Uint8Array(arrayBuffer);\r\n                                                            for (let i = 0; i < binaryImageData.length; i++) {\r\n                                                                view[i] = binaryImageData.charCodeAt(i);\r\n                                                            }\r\n                                                            // Create a Blob and generate a URL for displaying the image\r\n                                                            const blob = new Blob([arrayBuffer], { type: 'image/png' });\r\n                                                            setFieldValue(field[data]['field'], blob);\r\n                                                            return (\r\n                                                                <div style={st2.location}><img src={URL.createObjectURL(blob)} alt=\"Passport\" /></div>\r\n                                                            )\r\n                                                        }\r\n                                                        // else {\r\n                                                        //     // Fetch the blob data from the FormData object\r\n                                                        //     console.log(\" form data - \", field[data][\"imageData\"])\r\n                                                        //     const blobData = field[data][\"imageData\"].get('image');\r\n                                                        //     return (\r\n                                                        //         <div style={st2.location}><img src={URL.createObjectURL(blobData)} alt=\"Passport\" /></div>\r\n                                                        //     )\r\n                                                        // }\r\n                                                    }\r\n                                                    else {\r\n                                                        // Convert the base64 string to binary data\r\n                                                        const binaryImageData = atob(data);\r\n                                                        const arrayBuffer = new ArrayBuffer(binaryImageData.length);\r\n                                                        const view = new Uint8Array(arrayBuffer);\r\n                                                        for (let i = 0; i < binaryImageData.length; i++) {\r\n                                                            view[i] = binaryImageData.charCodeAt(i);\r\n                                                        }\r\n                                                        // Create a Blob and generate a URL for displaying the image\r\n                                                        const blob = new Blob([arrayBuffer], { type: 'image/png' });\r\n                                                        setFieldValue('passportImage', blob);\r\n                                                        return (\r\n                                                            <div style={st2.location}><img src={URL.createObjectURL(blob)} alt=\"Passport\" /></div>\r\n                                                        )\r\n                                                    }\r\n\r\n                                                } else {\r\n                                                    return (\r\n                                                        <strong><div style={st2.location}>Nothing</div></strong>\r\n                                                    )\r\n                                                }\r\n                                            })}\r\n                                        </div>\r\n                                    )\r\n                                })}\r\n\r\n                            </Paper>\r\n                        </Grid>\r\n                    </Grid>\r\n                }\r\n                <div>\r\n                    <input type=\"text\" onChange={this.handleNameChange} placeholder=\"Your Name\" />\r\n                    <input type=\"text\" onChange={this.handleDateChange} placeholder=\"Date - DD-MM-YYYY\" />\r\n                    <Button variant=\"contained\" color=\"primary\" className={classes.button} type=\"submit\" onClick={this.handleSubmit}>\r\n                        Submit Response\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nViewFinalData.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(ViewFinalData);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}