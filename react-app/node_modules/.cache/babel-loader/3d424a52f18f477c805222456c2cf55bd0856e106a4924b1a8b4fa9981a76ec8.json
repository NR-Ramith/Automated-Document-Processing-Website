{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ramith\\\\Projects\\\\Application Scanner\\\\scanner-app\\\\src\\\\components\\\\ImageDisplay.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass ImageDisplay extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      imageUrl: ''\n    };\n  }\n  componentDidMount() {\n    // Make a request to fetch the image from the server\n    fetch('/getImage').then(response => {\n      console.log(response);\n      response.blob();\n    }).then(blob => {\n      // Create a Blob URL for the image\n      const imageUrl = URL.createObjectURL(blob);\n      this.setState({\n        imageUrl\n      });\n    }).catch(error => console.error('Error fetching image:', error));\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.state.imageUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: this.state.imageUrl,\n        alt: \"Server Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default ImageDisplay;","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","ImageDisplay","constructor","arguments","state","imageUrl","componentDidMount","fetch","then","response","console","log","blob","URL","createObjectURL","setState","catch","error","render","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/Ramith/Projects/Application Scanner/scanner-app/src/components/ImageDisplay.js"],"sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass ImageDisplay extends Component {\r\n  state = {\r\n    imageUrl: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    // Make a request to fetch the image from the server\r\n    fetch('/getImage')\r\n      .then((response) => {console.log(response);response.blob()})\r\n      .then((blob) => {\r\n        // Create a Blob URL for the image\r\n        const imageUrl = URL.createObjectURL(blob);\r\n        this.setState({ imageUrl });\r\n      })\r\n      .catch((error) => console.error('Error fetching image:', error));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.imageUrl && (\r\n          <img src={this.state.imageUrl} alt=\"Server Image\" />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImageDisplay;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,YAAY,SAASH,SAAS,CAAC;EAAAI,YAAA;IAAA,SAAAC,SAAA;IAAA,KACnCC,KAAK,GAAG;MACNC,QAAQ,EAAE;IACZ,CAAC;EAAA;EAEDC,iBAAiBA,CAAA,EAAG;IAClB;IACAC,KAAK,CAAC,WAAW,CAAC,CACfC,IAAI,CAAEC,QAAQ,IAAK;MAACC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;MAACA,QAAQ,CAACG,IAAI,CAAC,CAAC;IAAA,CAAC,CAAC,CAC3DJ,IAAI,CAAEI,IAAI,IAAK;MACd;MACA,MAAMP,QAAQ,GAAGQ,GAAG,CAACC,eAAe,CAACF,IAAI,CAAC;MAC1C,IAAI,CAACG,QAAQ,CAAC;QAAEV;MAAS,CAAC,CAAC;IAC7B,CAAC,CAAC,CACDW,KAAK,CAAEC,KAAK,IAAKP,OAAO,CAACO,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC,CAAC;EACpE;EAEAC,MAAMA,CAAA,EAAG;IACP,oBACElB,OAAA;MAAAmB,QAAA,EACG,IAAI,CAACf,KAAK,CAACC,QAAQ,iBAClBL,OAAA;QAAKoB,GAAG,EAAE,IAAI,CAAChB,KAAK,CAACC,QAAS;QAACgB,GAAG,EAAC;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IACpD;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAEV;AACF;AAEA,eAAexB,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}