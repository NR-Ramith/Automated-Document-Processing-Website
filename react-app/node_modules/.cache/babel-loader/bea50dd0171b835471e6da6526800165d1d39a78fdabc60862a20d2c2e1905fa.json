{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ramith\\\\Projects\\\\Application Scanner\\\\scanner-app\\\\src\\\\components\\\\ChatBot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './style.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatBot = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [name, setName] = useState(null);\n  const [personalNumber, setPersonalNumber] = useState('');\n  const [email, setEmail] = useState('');\n  const [fatherName, setFatherName] = useState('');\n  const [fatherNumber, setFatherNumber] = useState('');\n  const [motherName, setMotherName] = useState('');\n  const [motherNumber, setMotherNumber] = useState('');\n  const [guardianName, setGuardianName] = useState('');\n  const [guardianNumber, setGuardianNumber] = useState('');\n  const [dob, setDob] = useState('');\n  const [date, setDate] = useState('');\n  const [address, setAddress] = useState('');\n  const [city, setCity] = useState('');\n  const [state, setState] = useState('');\n  const [nationality, setNationality] = useState('');\n  const [pinCode, setPinCode] = useState('');\n  const [voiceInput, setVoiceInput] = useState('');\n  const inputRef = useRef(null);\n  const [userInputs, setUserInputs] = useState([]);\n  const questions = [{\n    id: 1,\n    text: 'What is your name?',\n    field: 'name'\n  },\n  // { id: 2, text: 'What is your personal number?', field: 'personalNumber' },\n  // { id: 16, text: 'What is your email address?', field: 'email' },\n  // { id: 3, text: \"What is your father's name?\", field: 'fatherName' },\n  // { id: 4, text: \"What is your father's number?\", field: 'fatherNumber' },\n  // { id: 5, text: \"What is your mother's name?\", field: 'motherName' },\n  // { id: 6, text: \"What is your mother's number?\", field: 'motherNumber' },\n  // { id: 7, text: \"What is your guardian's name?\", field: 'guardianName' },\n  // { id: 8, text: \"What is your guardian's number?\", field: 'guardianNumber' },\n\n  {\n    id: 9,\n    text: 'What is your date of birth? Speak the date in this format - YYYY dash MM dash DD',\n    field: 'dob'\n  },\n  // { id: 10, text: 'What is the current date? Speak the date in this format - YYYY dash MM dash DD', field: 'date' },\n  {\n    id: 11,\n    text: 'What is your address?',\n    field: 'address'\n  }\n  // { id: 12, text: 'What is your city?', field: 'city' },\n  // { id: 13, text: 'What is your state?', field: 'state' },\n  // { id: 14, text: 'What is your nationality?', field: 'nationality' },\n  // { id: 15, text: 'What is your pin code?', field: 'pinCode' },\n  ];\n\n  const handleVoiceInput = event => {\n    const transcript = event.results[0][0].transcript;\n    setVoiceInput(transcript);\n  };\n  const handleVoiceError = event => {\n    console.log('Voice recognition error:', event.error);\n  };\n  const readOutText = text => {\n    const utterance = new SpeechSynthesisUtterance(text);\n    window.speechSynthesis.speak(utterance);\n  };\n  const startVoiceRecognition = () => {\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    const recognition = new SpeechRecognition();\n    recognition.interimResults = false;\n    recognition.lang = 'en-US';\n    recognition.addEventListener('result', handleVoiceInput);\n    recognition.addEventListener('error', handleVoiceError);\n    recognition.start();\n  };\n  const stopVoiceRecognition = () => {\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    const recognition = new SpeechRecognition();\n    recognition.stop();\n  };\n  function validateAndFormatName(input) {\n    // Check if the name contains numbers or special characters\n    if (/\\d/.test(input) || /[!@#$%^&*()_+{}\\[\\]:;<>,.?~\\\\/]/.test(input)) {\n      return {\n        isValid: false,\n        formattedName: null\n      };\n    }\n\n    // Capitalize the first letter of every word\n    const words = input.split(' ');\n    const capitalizedWords = words.map(word => {\n      if (word.length > 0) {\n        return word.charAt(0).toUpperCase() + word.slice(1).toLowerCase();\n      }\n      return word;\n    });\n    const formattedName = capitalizedWords.join(' ');\n    return {\n      isValid: true,\n      formattedName\n    };\n  }\n  function isValidDateFormat(input) {\n    // Regular expression to match \"YYYY-MM-DD\" format\n    const regex = /^\\d{4}-\\d{2}-\\d{2}$/;\n    return regex.test(input);\n  }\n  function isValidDate(year, month, day) {\n    const dateObject = new Date(year, month - 1, day); // Month is 0-indexed\n    if (dateObject.getFullYear() !== year || dateObject.getMonth() !== month - 1 || dateObject.getDate() !== day) {\n      return false; // Invalid date\n    }\n\n    // Check if the input date is not beyond the present day\n    const currentDate = new Date();\n    if (dateObject > currentDate) {\n      return false; // Input date is in the future\n    }\n\n    // Check if the day is within the valid range for the given month\n    const lastDayOfMonth = new Date(year, month, 0).getDate();\n    if (day < 1 || day > lastDayOfMonth) {\n      return false; // Invalid day for the given month\n    }\n\n    return true; // Date is valid\n  }\n\n  const handleUserInput = async event => {\n    event.preventDefault();\n    // console.log('Handle User Input');\n    // console.log('Data:', { name, address, dob });\n    let userInput = voiceInput || inputRef.current.value; // Use voiceInput if available, otherwise use text input\n    // Remove trailing full stop if it exists\n    userInput = userInput.replace(/\\.$/, '');\n    const currentQuestion = questions[currentQuestionIndex];\n    const updatedMessages = [];\n    userInput = userInput.trim(); // Remove leading and trailing whitespace\n\n    if (userInput === \"\") {\n      // If field is mandatory\n      if (currentQuestion.field === 'name' || currentQuestion.field === 'personalNumber') {\n        const mandatoryMessage = {\n          text: 'This field is required.',\n          isUser: false\n        };\n        setMessages([...updatedMessages, maMessage]);\n        readOutText(mandatoryMessage.text);\n      }\n      // If user input is empty, just move to the next question\n      if (currentQuestionIndex + 1 < questions.length) {\n        const nextQuestion = questions[currentQuestionIndex + 1];\n        const nextQuestionMessage = {\n          text: nextQuestion.text,\n          isUser: false\n        };\n        setMessages([...messages, nextQuestionMessage]);\n        setCurrentQuestionIndex(currentQuestionIndex + 1);\n        readOutText(nextQuestion.text);\n      } else {\n        // Conversation ended, you can handle this however you want\n        const endMessage = {\n          text: 'Thank you for the conversation!\\n Enter your Name',\n          isUser: false\n        };\n        setMessages([...updatedMessages, endMessage]);\n        setCurrentQuestionIndex(0); // Reset to the initial question for future conversations\n        readOutText(endMessage.text);\n      }\n      return; // Skip further processing\n    }\n\n    // Validation and formatting for name fields\n    if (currentQuestion.field === 'name' || currentQuestion.field === 'fatherName' || currentQuestion.field === 'motherName' || currentQuestion.field === 'guardianName' || currentQuestion.field === 'nationality') {\n      const {\n        isValid,\n        formattedName\n      } = validateAndFormatName(userInput);\n      if (!isValid) {\n        const invalidMessage = \"Invalid Name. Please enter a valid name with no numbers and special characters.\";\n        const invalidMessageObj = {\n          text: invalidMessage,\n          isUser: false\n        };\n        setMessages([...messages, invalidMessageObj]);\n        readOutText(invalidMessage);\n        return; // Stop further processing\n      }\n\n      userInput = formattedName; // Use the formatted name\n    }\n\n    // Validation for number\n    if (currentQuestion.field === 'personalNumber') {\n      if (userInput.length !== 10 || !/^\\d+$/.test(userInput)) {\n        const invalidMessage = \"Invalid Number. Please enter a 10-digit numeric number.\";\n        const invalidMessageObj = {\n          text: invalidMessage,\n          isUser: false\n        };\n        setMessages([...messages, invalidMessageObj]);\n        readOutText(invalidMessage);\n        return; // Stop further processing\n      }\n    }\n\n    // Validation for email\n    if (currentQuestion.field === 'email') {\n      if (!/^[\\w-]+(\\.[\\w-]+)*@([\\w-]+\\.)+[a-zA-Z]{2,7}$/.test(userInput)) {\n        const invalidMessage = \"Invalid Email. Please enter a valid email address.\";\n        const invalidMessageObj = {\n          text: invalidMessage,\n          isUser: false\n        };\n        setMessages([...messages, invalidMessageObj]);\n        readOutText(invalidMessage);\n        return; // Stop further processing\n      }\n    }\n\n    // Validation for pinCode\n    if (currentQuestion.field === 'pinCode') {\n      if (userInput.length !== 6 || !/^\\d+$/.test(userInput)) {\n        const invalidMessage = \"Invalid Pin Code. Please enter a 6-digit numeric number.\";\n        const invalidMessageObj = {\n          text: invalidMessage,\n          isUser: false\n        };\n        setMessages([...messages, invalidMessageObj]);\n        readOutText(invalidMessage);\n        return; // Stop further processing\n      }\n    }\n\n    // Validation for dates\n    if (currentQuestion.field === 'date' || currentQuestion.field === 'dob') {\n      if (!isValidDateFormat(userInput)) {\n        const invalidMessage = \"Invalid Date Format. Please use YYYY-MM-DD format.\";\n        const invalidMessageObj = {\n          text: invalidMessage,\n          isUser: false\n        };\n        setMessages([...messages, invalidMessageObj]);\n        readOutText(invalidMessage);\n        return; // Stop further processing\n      }\n      // Check if the date is a valid date\n      const parts = userInput.split('-');\n      const year = parseInt(parts[0], 10);\n      const month = parseInt(parts[1], 10);\n      const day = parseInt(parts[2], 10);\n      if (!isValidDate(year, month, day)) {\n        const invalidMessage = \"Invalid Date. Please enter a valid calendar date.\";\n        const invalidMessageObj = {\n          text: invalidMessage,\n          isUser: false\n        };\n        setMessages([...messages, invalidMessageObj]);\n        readOutText(invalidMessage);\n        return; // Stop further processing\n      }\n    }\n\n    // Capture the user's input for the current field\n    switch (currentQuestion.field) {\n      case 'name':\n        setName(userInput);\n        break;\n      case 'personalNumber':\n        setPersonalNumber(userInput);\n        break;\n      case 'email':\n        setEmail(userInput);\n        break;\n      case 'fatherName':\n        setFatherName(userInput);\n        break;\n      case 'fatherNumber':\n        setFatherNumber(userInput);\n        break;\n      case 'motherName':\n        setMotherName(userInput);\n        break;\n      case 'motherNumber':\n        setMotherNumber(userInput);\n        break;\n      case 'guardianName':\n        setGuardianName(userInput);\n        break;\n      case 'guardianNumber':\n        setGuardianNumber(userInput);\n        break;\n      case 'dob':\n        setDob(userInput);\n        break;\n      case 'date':\n        setDate(userInput);\n        break;\n      case 'address':\n        setAddress(userInput);\n        break;\n      case 'city':\n        setCity(userInput);\n        break;\n      case 'state':\n        setState(userInput);\n        break;\n      case 'nationality':\n        setNationality(userInput);\n        break;\n      case 'pinCode':\n        setPinCode(userInput);\n        break;\n      default:\n        break;\n    }\n\n    // Add the user's input to the messages\n    updatedMessages = [...messages, {\n      text: userInput,\n      isUser: true\n    }];\n    setMessages(updatedMessages);\n    setVoiceInput('');\n\n    // Move to the next field or end the conversation\n    if (currentQuestionIndex + 1 < questions.length) {\n      // Ask the next question\n      const nextQuestion = questions[currentQuestionIndex + 1];\n      const nextQuestionMessage = {\n        text: nextQuestion.text,\n        isUser: false\n      };\n      setMessages([...updatedMessages, nextQuestionMessage]);\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n\n      // Read out the next question\n      readOutText(nextQuestion.text);\n    } else {\n      // Conversation ended, you can handle this however you want\n      const endMessage = {\n        text: 'Thank you for the conversation!\\n Enter your Name',\n        isUser: false\n      };\n      setMessages([...updatedMessages, endMessage]);\n      setCurrentQuestionIndex(0); // Reset to the initial question for future conversations\n      readOutText(endMessage.text);\n    }\n  };\n\n  // Use useEffect to capture the updated dob value before sending it to the server\n  useEffect(() => {\n    if (dob) {\n      // Capture the updated dob value\n      const updatedDob = dob;\n\n      // Send the user input to the server\n      const sendUserInput = async () => {\n        try {\n          await axios.post('http://localhost:3001/save', {\n            userInput: {\n              name,\n              // address,\n              dob: updatedDob\n            }\n          });\n          console.log('User input saved successfully');\n\n          // Add the user inputs to the userInputs array\n          const newInput = {\n            name,\n            address,\n            dob: updatedDob\n          };\n          setUserInputs(prevUserInputs => [...prevUserInputs, newInput]);\n\n          // Clear the input fields\n          setName('');\n          setAddress('');\n          setDob('');\n        } catch (error) {\n          console.error('Failed to save user input:', error);\n        }\n      };\n      sendUserInput();\n    }\n  }, [dob]);\n  useEffect(() => {\n    // Scroll to the bottom of the chat window whenever messages change\n    const chatWindow = document.getElementById('chat-window');\n    chatWindow.scrollTop = chatWindow.scrollHeight;\n  }, [messages]);\n  useEffect(() => {\n    // Ask the initial question when the component mounts\n    const currentQuestion = questions[currentQuestionIndex];\n    setMessages([...messages, {\n      text: currentQuestion.text,\n      isUser: false\n    }]);\n    readOutText(currentQuestion.text); // Read out the initial question\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"ChatBot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"chat-window\",\n      className: \"chat-window\",\n      children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.isUser ? 'user' : 'bot'}`,\n        children: message.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 11\n      }, this)), userInputs.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message bot\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Collected Inputs:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 13\n        }, this), userInputs.map((input, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [input.name && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 38\n            }, this), \" \", input.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 32\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 17\n          }, this), input.personalNumber && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Personal Number:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 48\n            }, this), \" \", input.personalNumber]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 42\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 17\n          }, this), input.email && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Email:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 39\n            }, this), \" \", input.email]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 17\n          }, this), input.fatherName && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Father's Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 44\n            }, this), \" \", input.fatherName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 38\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 17\n          }, this), input.fatherNumber && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Father's Number:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 46\n            }, this), \" \", input.fatherNumber]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 40\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 17\n          }, this), input.motherName && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Mother's Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 44\n            }, this), \" \", input.motherName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 38\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 17\n          }, this), input.motherNumber && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Mother's Number:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 46\n            }, this), \" \", input.motherNumber]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 40\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 17\n          }, this), input.guardianName && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Guardian's Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 421,\n              columnNumber: 46\n            }, this), \" \", input.guardianName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 40\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 17\n          }, this), input.guardianNumber && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Guardian's Number:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 48\n            }, this), \" \", input.guardianNumber]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 42\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 17\n          }, this), input.dob && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Date of Birth:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 37\n            }, this), \" \", input.dob]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 17\n          }, this), input.date && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Date:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 427,\n              columnNumber: 38\n            }, this), \" \", input.date]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 32\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 17\n          }, this), input.address && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Address:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 41\n            }, this), \" \", input.address]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 35\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 17\n          }, this), input.city && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"City:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 38\n            }, this), \" \", input.city]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 32\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 17\n          }, this), input.state && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"State:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 39\n            }, this), \" \", input.state]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 17\n          }, this), input.nationality && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Nationality:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 45\n            }, this), \" \", input.nationality]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 39\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 17\n          }, this), input.pinCode && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"PIN Code:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 41\n            }, this), \" \", input.pinCode]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 35\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleUserInput,\n      className: \"input-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        ref: inputRef,\n        value: voiceInput,\n        onChange: e => setVoiceInput(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"voice-recognition\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startVoiceRecognition,\n        children: \"Start Voice Recognition\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: stopVoiceRecognition,\n        children: \"Stop Voice Recognition\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 389,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatBot, \"cs+TIKgrD7DQrNCCkCoHPLzTxsY=\");\n_c = ChatBot;\nexport default ChatBot;\nvar _c;\n$RefreshReg$(_c, \"ChatBot\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","jsxDEV","_jsxDEV","ChatBot","_s","messages","setMessages","currentQuestionIndex","setCurrentQuestionIndex","name","setName","personalNumber","setPersonalNumber","email","setEmail","fatherName","setFatherName","fatherNumber","setFatherNumber","motherName","setMotherName","motherNumber","setMotherNumber","guardianName","setGuardianName","guardianNumber","setGuardianNumber","dob","setDob","date","setDate","address","setAddress","city","setCity","state","setState","nationality","setNationality","pinCode","setPinCode","voiceInput","setVoiceInput","inputRef","userInputs","setUserInputs","questions","id","text","field","handleVoiceInput","event","transcript","results","handleVoiceError","console","log","error","readOutText","utterance","SpeechSynthesisUtterance","window","speechSynthesis","speak","startVoiceRecognition","SpeechRecognition","webkitSpeechRecognition","recognition","interimResults","lang","addEventListener","start","stopVoiceRecognition","stop","validateAndFormatName","input","test","isValid","formattedName","words","split","capitalizedWords","map","word","length","charAt","toUpperCase","slice","toLowerCase","join","isValidDateFormat","regex","isValidDate","year","month","day","dateObject","Date","getFullYear","getMonth","getDate","currentDate","lastDayOfMonth","handleUserInput","preventDefault","userInput","current","value","replace","currentQuestion","updatedMessages","trim","mandatoryMessage","isUser","maMessage","nextQuestion","nextQuestionMessage","endMessage","invalidMessage","invalidMessageObj","parts","parseInt","updatedDob","sendUserInput","post","newInput","prevUserInputs","chatWindow","document","getElementById","scrollTop","scrollHeight","className","children","fileName","_jsxFileName","lineNumber","columnNumber","message","index","onSubmit","type","ref","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Ramith/Projects/Application Scanner/scanner-app/src/components/ChatBot.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport './style.css';\r\nimport axios from 'axios';\r\n\r\nconst ChatBot = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [name, setName] = useState(null);\r\n  const [personalNumber, setPersonalNumber] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [fatherName, setFatherName] = useState('');\r\n  const [fatherNumber, setFatherNumber] = useState('');\r\n  const [motherName, setMotherName] = useState('');\r\n  const [motherNumber, setMotherNumber] = useState('');\r\n  const [guardianName, setGuardianName] = useState('');\r\n  const [guardianNumber, setGuardianNumber] = useState('');\r\n  const [dob, setDob] = useState('');\r\n  const [date, setDate] = useState('');\r\n  const [address, setAddress] = useState('');\r\n  const [city, setCity] = useState('');\r\n  const [state, setState] = useState('');\r\n  const [nationality, setNationality] = useState('');\r\n  const [pinCode, setPinCode] = useState('');\r\n  const [voiceInput, setVoiceInput] = useState('');\r\n  const inputRef = useRef(null);\r\n  const [userInputs, setUserInputs] = useState([]);\r\n\r\n  const questions = [\r\n    { id: 1, text: 'What is your name?', field: 'name' },\r\n    // { id: 2, text: 'What is your personal number?', field: 'personalNumber' },\r\n    // { id: 16, text: 'What is your email address?', field: 'email' },\r\n    // { id: 3, text: \"What is your father's name?\", field: 'fatherName' },\r\n    // { id: 4, text: \"What is your father's number?\", field: 'fatherNumber' },\r\n    // { id: 5, text: \"What is your mother's name?\", field: 'motherName' },\r\n    // { id: 6, text: \"What is your mother's number?\", field: 'motherNumber' },\r\n    // { id: 7, text: \"What is your guardian's name?\", field: 'guardianName' },\r\n    // { id: 8, text: \"What is your guardian's number?\", field: 'guardianNumber' },\r\n\r\n    { id: 9, text: 'What is your date of birth? Speak the date in this format - YYYY dash MM dash DD', field: 'dob' },\r\n    // { id: 10, text: 'What is the current date? Speak the date in this format - YYYY dash MM dash DD', field: 'date' },\r\n    { id: 11, text: 'What is your address?', field: 'address' },\r\n    // { id: 12, text: 'What is your city?', field: 'city' },\r\n    // { id: 13, text: 'What is your state?', field: 'state' },\r\n    // { id: 14, text: 'What is your nationality?', field: 'nationality' },\r\n    // { id: 15, text: 'What is your pin code?', field: 'pinCode' },\r\n  ];\r\n\r\n  const handleVoiceInput = (event) => {\r\n    const transcript = event.results[0][0].transcript;\r\n    setVoiceInput(transcript);\r\n  };\r\n\r\n  const handleVoiceError = (event) => {\r\n    console.log('Voice recognition error:', event.error);\r\n  };\r\n\r\n  const readOutText = (text) => {\r\n    const utterance = new SpeechSynthesisUtterance(text);\r\n    window.speechSynthesis.speak(utterance);\r\n  };\r\n\r\n  const startVoiceRecognition = () => {\r\n    const SpeechRecognition =\r\n      window.SpeechRecognition || window.webkitSpeechRecognition;\r\n    const recognition = new SpeechRecognition();\r\n    recognition.interimResults = false;\r\n    recognition.lang = 'en-US';\r\n    recognition.addEventListener('result', handleVoiceInput);\r\n    recognition.addEventListener('error', handleVoiceError);\r\n    recognition.start();\r\n  };\r\n\r\n  const stopVoiceRecognition = () => {\r\n    const SpeechRecognition =\r\n      window.SpeechRecognition || window.webkitSpeechRecognition;\r\n    const recognition = new SpeechRecognition();\r\n    recognition.stop();\r\n  };\r\n\r\n  function validateAndFormatName(input) {\r\n    // Check if the name contains numbers or special characters\r\n    if (/\\d/.test(input) || /[!@#$%^&*()_+{}\\[\\]:;<>,.?~\\\\/]/.test(input)) {\r\n      return { isValid: false, formattedName: null };\r\n    }\r\n\r\n    // Capitalize the first letter of every word\r\n    const words = input.split(' ');\r\n    const capitalizedWords = words.map((word) => {\r\n      if (word.length > 0) {\r\n        return word.charAt(0).toUpperCase() + word.slice(1).toLowerCase();\r\n      }\r\n      return word;\r\n    });\r\n\r\n    const formattedName = capitalizedWords.join(' ');\r\n\r\n    return { isValid: true, formattedName };\r\n  }\r\n\r\n  function isValidDateFormat(input) {\r\n    // Regular expression to match \"YYYY-MM-DD\" format\r\n    const regex = /^\\d{4}-\\d{2}-\\d{2}$/;\r\n\r\n    return regex.test(input);\r\n  }\r\n\r\n  function isValidDate(year, month, day) {\r\n    const dateObject = new Date(year, month - 1, day); // Month is 0-indexed\r\n    if (\r\n      dateObject.getFullYear() !== year ||\r\n      dateObject.getMonth() !== month - 1 ||\r\n      dateObject.getDate() !== day\r\n    ) {\r\n      return false; // Invalid date\r\n    }\r\n\r\n    // Check if the input date is not beyond the present day\r\n    const currentDate = new Date();\r\n    if (dateObject > currentDate) {\r\n      return false; // Input date is in the future\r\n    }\r\n\r\n    // Check if the day is within the valid range for the given month\r\n    const lastDayOfMonth = new Date(year, month, 0).getDate();\r\n    if (day < 1 || day > lastDayOfMonth) {\r\n      return false; // Invalid day for the given month\r\n    }\r\n\r\n    return true; // Date is valid\r\n  }\r\n\r\n  const handleUserInput = async (event) => {\r\n    event.preventDefault();\r\n    // console.log('Handle User Input');\r\n    // console.log('Data:', { name, address, dob });\r\n    let userInput = voiceInput || inputRef.current.value; // Use voiceInput if available, otherwise use text input\r\n    // Remove trailing full stop if it exists\r\n    userInput = userInput.replace(/\\.$/, '');\r\n    const currentQuestion = questions[currentQuestionIndex];\r\n    const updatedMessages=[];\r\n\r\n    userInput = userInput.trim(); // Remove leading and trailing whitespace\r\n\r\n    if (userInput === \"\") {\r\n      // If field is mandatory\r\n      if(currentQuestion.field==='name' || currentQuestion.field==='personalNumber'){\r\n        const mandatoryMessage = {\r\n          text: 'This field is required.',\r\n          isUser: false,\r\n        };\r\n        setMessages([...updatedMessages, maMessage]);\r\n        readOutText(mandatoryMessage.text);\r\n      }\r\n      // If user input is empty, just move to the next question\r\n      if (currentQuestionIndex + 1 < questions.length) {\r\n        const nextQuestion = questions[currentQuestionIndex + 1];\r\n        const nextQuestionMessage = { text: nextQuestion.text, isUser: false };\r\n        setMessages([...messages, nextQuestionMessage]);\r\n        setCurrentQuestionIndex(currentQuestionIndex + 1);\r\n        readOutText(nextQuestion.text);\r\n      } else {\r\n        // Conversation ended, you can handle this however you want\r\n        const endMessage = {\r\n          text: 'Thank you for the conversation!\\n Enter your Name',\r\n          isUser: false,\r\n        };\r\n        setMessages([...updatedMessages, endMessage]);\r\n        setCurrentQuestionIndex(0); // Reset to the initial question for future conversations\r\n        readOutText(endMessage.text);\r\n      }\r\n      return; // Skip further processing\r\n    }\r\n\r\n    // Validation and formatting for name fields\r\n    if (currentQuestion.field === 'name' ||\r\n      currentQuestion.field === 'fatherName' ||\r\n      currentQuestion.field === 'motherName' ||\r\n      currentQuestion.field === 'guardianName' ||\r\n      currentQuestion.field === 'nationality') {\r\n      const { isValid, formattedName } = validateAndFormatName(userInput);\r\n      if (!isValid) {\r\n        const invalidMessage = \"Invalid Name. Please enter a valid name with no numbers and special characters.\";\r\n        const invalidMessageObj = { text: invalidMessage, isUser: false };\r\n\r\n        setMessages([...messages, invalidMessageObj]);\r\n        readOutText(invalidMessage);\r\n        return; // Stop further processing\r\n      }\r\n      userInput = formattedName; // Use the formatted name\r\n    }\r\n\r\n    // Validation for number\r\n    if (currentQuestion.field === 'personalNumber') {\r\n      if (userInput.length !== 10 || !/^\\d+$/.test(userInput)) {\r\n        const invalidMessage = \"Invalid Number. Please enter a 10-digit numeric number.\";\r\n        const invalidMessageObj = { text: invalidMessage, isUser: false };\r\n\r\n        setMessages([...messages, invalidMessageObj]);\r\n        readOutText(invalidMessage);\r\n        return; // Stop further processing\r\n      }\r\n    }\r\n\r\n    // Validation for email\r\n    if (currentQuestion.field === 'email') {\r\n      if (!/^[\\w-]+(\\.[\\w-]+)*@([\\w-]+\\.)+[a-zA-Z]{2,7}$/.test(userInput)) {\r\n        const invalidMessage = \"Invalid Email. Please enter a valid email address.\";\r\n        const invalidMessageObj = { text: invalidMessage, isUser: false };\r\n\r\n        setMessages([...messages, invalidMessageObj]);\r\n        readOutText(invalidMessage);\r\n        return; // Stop further processing\r\n      }\r\n    }\r\n\r\n    // Validation for pinCode\r\n    if (currentQuestion.field === 'pinCode') {\r\n      if (userInput.length !== 6 || !/^\\d+$/.test(userInput)) {\r\n        const invalidMessage = \"Invalid Pin Code. Please enter a 6-digit numeric number.\";\r\n        const invalidMessageObj = { text: invalidMessage, isUser: false };\r\n\r\n        setMessages([...messages, invalidMessageObj]);\r\n        readOutText(invalidMessage);\r\n        return; // Stop further processing\r\n      }\r\n    }\r\n\r\n    // Validation for dates\r\n    if (currentQuestion.field === 'date' || currentQuestion.field === 'dob') {\r\n      if (!isValidDateFormat(userInput)) {\r\n        const invalidMessage = \"Invalid Date Format. Please use YYYY-MM-DD format.\";\r\n        const invalidMessageObj = { text: invalidMessage, isUser: false };\r\n\r\n        setMessages([...messages, invalidMessageObj]);\r\n        readOutText(invalidMessage);\r\n        return; // Stop further processing\r\n      }\r\n      // Check if the date is a valid date\r\n      const parts = userInput.split('-');\r\n      const year = parseInt(parts[0], 10);\r\n      const month = parseInt(parts[1], 10);\r\n      const day = parseInt(parts[2], 10);\r\n\r\n      if (!isValidDate(year, month, day)) {\r\n        const invalidMessage = \"Invalid Date. Please enter a valid calendar date.\";\r\n        const invalidMessageObj = { text: invalidMessage, isUser: false };\r\n\r\n        setMessages([...messages, invalidMessageObj]);\r\n        readOutText(invalidMessage);\r\n        return; // Stop further processing\r\n      }\r\n    }\r\n\r\n    // Capture the user's input for the current field\r\n    switch (currentQuestion.field) {\r\n      case 'name':\r\n        setName(userInput);\r\n        break;\r\n      case 'personalNumber':\r\n        setPersonalNumber(userInput);\r\n        break;\r\n      case 'email':\r\n        setEmail(userInput);\r\n        break;\r\n      case 'fatherName':\r\n        setFatherName(userInput);\r\n        break;\r\n      case 'fatherNumber':\r\n        setFatherNumber(userInput);\r\n        break;\r\n      case 'motherName':\r\n        setMotherName(userInput);\r\n        break;\r\n      case 'motherNumber':\r\n        setMotherNumber(userInput);\r\n        break;\r\n      case 'guardianName':\r\n        setGuardianName(userInput);\r\n        break;\r\n      case 'guardianNumber':\r\n        setGuardianNumber(userInput);\r\n        break;\r\n      case 'dob':\r\n        setDob(userInput);\r\n        break;\r\n      case 'date':\r\n        setDate(userInput);\r\n        break;\r\n      case 'address':\r\n        setAddress(userInput);\r\n        break;\r\n      case 'city':\r\n        setCity(userInput);\r\n        break;\r\n      case 'state':\r\n        setState(userInput);\r\n        break;\r\n      case 'nationality':\r\n        setNationality(userInput);\r\n        break;\r\n      case 'pinCode':\r\n        setPinCode(userInput);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    // Add the user's input to the messages\r\n    updatedMessages = [\r\n      ...messages,\r\n      { text: userInput, isUser: true },\r\n    ];\r\n    setMessages(updatedMessages);\r\n    setVoiceInput('');\r\n\r\n    // Move to the next field or end the conversation\r\n    if (currentQuestionIndex + 1 < questions.length) {\r\n      // Ask the next question\r\n      const nextQuestion = questions[currentQuestionIndex + 1];\r\n      const nextQuestionMessage = { text: nextQuestion.text, isUser: false };\r\n      setMessages([...updatedMessages, nextQuestionMessage]);\r\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\r\n\r\n      // Read out the next question\r\n      readOutText(nextQuestion.text);\r\n    } else {\r\n      // Conversation ended, you can handle this however you want\r\n      const endMessage = {\r\n        text: 'Thank you for the conversation!\\n Enter your Name',\r\n        isUser: false,\r\n      };\r\n      setMessages([...updatedMessages, endMessage]);\r\n      setCurrentQuestionIndex(0); // Reset to the initial question for future conversations\r\n      readOutText(endMessage.text);\r\n    }\r\n  };\r\n\r\n  // Use useEffect to capture the updated dob value before sending it to the server\r\n  useEffect(() => {\r\n    if (dob) {\r\n      // Capture the updated dob value\r\n      const updatedDob = dob;\r\n\r\n      // Send the user input to the server\r\n      const sendUserInput = async () => {\r\n        try {\r\n          await axios.post('http://localhost:3001/save', {\r\n            userInput: {\r\n              name,\r\n              // address,\r\n              dob: updatedDob,\r\n            },\r\n          });\r\n          console.log('User input saved successfully');\r\n\r\n          // Add the user inputs to the userInputs array\r\n          const newInput = { name, address, dob: updatedDob };\r\n          setUserInputs((prevUserInputs) => [...prevUserInputs, newInput]);\r\n\r\n          // Clear the input fields\r\n          setName('');\r\n          setAddress('');\r\n          setDob('');\r\n        } catch (error) {\r\n          console.error('Failed to save user input:', error);\r\n        }\r\n      };\r\n\r\n      sendUserInput();\r\n    }\r\n  }, [dob]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    // Scroll to the bottom of the chat window whenever messages change\r\n    const chatWindow = document.getElementById('chat-window');\r\n    chatWindow.scrollTop = chatWindow.scrollHeight;\r\n  }, [messages]);\r\n\r\n  useEffect(() => {\r\n    // Ask the initial question when the component mounts\r\n    const currentQuestion = questions[currentQuestionIndex];\r\n    setMessages([...messages, { text: currentQuestion.text, isUser: false }]);\r\n    readOutText(currentQuestion.text); // Read out the initial question\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  return (\r\n    <div className=\"chatbot-container\">\r\n      <div className=\"chatbot-header\">\r\n        <h2>ChatBot</h2>\r\n      </div>\r\n      <div id=\"chat-window\" className=\"chat-window\">\r\n        {messages.map((message, index) => (\r\n          <div\r\n            key={index}\r\n            className={`message ${message.isUser ? 'user' : 'bot'}`}\r\n          >\r\n            {message.text}\r\n          </div>\r\n        ))}\r\n        {userInputs.length > 0 && (\r\n          <div className=\"message bot\">\r\n            <h4>Collected Inputs:</h4>\r\n            {userInputs.map((input, index) => (\r\n              <div key={index}>\r\n                {input.name && <span><strong>Name:</strong> {input.name}</span>}\r\n                <br />\r\n                {input.personalNumber && <span><strong>Personal Number:</strong> {input.personalNumber}</span>}\r\n                <br />\r\n                {input.email && <span><strong>Email:</strong> {input.email}</span>}\r\n                <br />\r\n                {input.fatherName && <span><strong>Father's Name:</strong> {input.fatherName}</span>}\r\n                <br />\r\n                {input.fatherNumber && <span><strong>Father's Number:</strong> {input.fatherNumber}</span>}\r\n                <br />\r\n                {input.motherName && <span><strong>Mother's Name:</strong> {input.motherName}</span>}\r\n                <br />\r\n                {input.motherNumber && <span><strong>Mother's Number:</strong> {input.motherNumber}</span>}\r\n                <br />\r\n                {input.guardianName && <span><strong>Guardian's Name:</strong> {input.guardianName}</span>}\r\n                <br />\r\n                {input.guardianNumber && <span><strong>Guardian's Number:</strong> {input.guardianNumber}</span>}\r\n                <br />\r\n                {input.dob && <span><strong>Date of Birth:</strong> {input.dob}</span>}\r\n                <br />\r\n                {input.date && <span><strong>Date:</strong> {input.date}</span>}\r\n                <br />\r\n                {input.address && <span><strong>Address:</strong> {input.address}</span>}\r\n                <br />\r\n                {input.city && <span><strong>City:</strong> {input.city}</span>}\r\n                <br />\r\n                {input.state && <span><strong>State:</strong> {input.state}</span>}\r\n                <br />\r\n                {input.nationality && <span><strong>Nationality:</strong> {input.nationality}</span>}\r\n                <br />\r\n                {input.pinCode && <span><strong>PIN Code:</strong> {input.pinCode}</span>}\r\n                <br />\r\n                <br />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n\r\n      </div>\r\n      <form onSubmit={handleUserInput} className=\"input-form\">\r\n        <input\r\n          type=\"text\"\r\n          ref={inputRef}\r\n          value={voiceInput}\r\n          onChange={(e) => setVoiceInput(e.target.value)}\r\n        />\r\n        <button type=\"submit\">Send</button>\r\n      </form>\r\n      <div className=\"voice-recognition\">\r\n        <button onClick={startVoiceRecognition}>Start Voice Recognition</button>\r\n        <button onClick={stopVoiceRecognition}>Stop Voice Recognition</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatBot;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}