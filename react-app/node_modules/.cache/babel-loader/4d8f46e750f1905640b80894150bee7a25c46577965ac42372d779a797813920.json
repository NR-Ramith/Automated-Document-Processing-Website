{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ramith\\\\Projects\\\\Application Scanner\\\\scanner-app\\\\react-app\\\\src\\\\components\\\\GoogleSheetForm.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GoogleSheetForm = () => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  useEffect(() => {\n    // Replace 'YOUR_SPREADSHEET_ID' with your actual spreadsheet ID\n    const spreadsheetId = '618026251';\n\n    // The Google Sheets API endpoint to get sheet data\n    const endpoint = `https://sheets.googleapis.com/v4/spreadsheets/${spreadsheetId}`;\n    fetch(endpoint).then(response => response.json()).then(data => {\n      cons;\n      // Extracting questions from the Google Sheets API response\n      const sheetData = data.sheets[0].data[0].rowData;\n      const questionsArray = sheetData.map(row => row.values[0].formattedValue);\n      setQuestions(questionsArray);\n    }).catch(error => console.error('Error fetching data:', error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Google Form Questions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: question\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(GoogleSheetForm, \"1ery3Y2F+nTWSbC27k3nmjCRtvo=\");\n_c = GoogleSheetForm;\nexport default GoogleSheetForm;\nvar _c;\n$RefreshReg$(_c, \"GoogleSheetForm\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","GoogleSheetForm","_s","questions","setQuestions","spreadsheetId","endpoint","fetch","then","response","json","data","cons","sheetData","sheets","rowData","questionsArray","map","row","values","formattedValue","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","question","index","_c","$RefreshReg$"],"sources":["C:/Users/Ramith/Projects/Application Scanner/scanner-app/react-app/src/components/GoogleSheetForm.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst GoogleSheetForm = () => {\r\n  const [questions, setQuestions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Replace 'YOUR_SPREADSHEET_ID' with your actual spreadsheet ID\r\n    const spreadsheetId = '618026251';\r\n\r\n    // The Google Sheets API endpoint to get sheet data\r\n    const endpoint = `https://sheets.googleapis.com/v4/spreadsheets/${spreadsheetId}`;\r\n\r\n    fetch(endpoint)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        cons\r\n        // Extracting questions from the Google Sheets API response\r\n        const sheetData = data.sheets[0].data[0].rowData;\r\n        const questionsArray = sheetData.map(row => row.values[0].formattedValue);\r\n        setQuestions(questionsArray);\r\n      })\r\n      .catch(error => console.error('Error fetching data:', error));\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Google Form Questions</h1>\r\n      <ul>\r\n        {questions.map((question, index) => (\r\n          <li key={index}>{question}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GoogleSheetForm;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACd;IACA,MAAMQ,aAAa,GAAG,WAAW;;IAEjC;IACA,MAAMC,QAAQ,GAAI,iDAAgDD,aAAc,EAAC;IAEjFE,KAAK,CAACD,QAAQ,CAAC,CACZE,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACZC,IAAI;MACJ;MACA,MAAMC,SAAS,GAAGF,IAAI,CAACG,MAAM,CAAC,CAAC,CAAC,CAACH,IAAI,CAAC,CAAC,CAAC,CAACI,OAAO;MAChD,MAAMC,cAAc,GAAGH,SAAS,CAACI,GAAG,CAACC,GAAG,IAAIA,GAAG,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,cAAc,CAAC;MACzEhB,YAAY,CAACY,cAAc,CAAC;IAC9B,CAAC,CAAC,CACDK,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC,CAAC;EACjE,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEtB,OAAA;IAAAwB,QAAA,gBACExB,OAAA;MAAAwB,QAAA,EAAI;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC9B5B,OAAA;MAAAwB,QAAA,EACGrB,SAAS,CAACc,GAAG,CAAC,CAACY,QAAQ,EAAEC,KAAK,kBAC7B9B,OAAA;QAAAwB,QAAA,EAAiBK;MAAQ,GAAhBC,KAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAgB,CAC/B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAAC1B,EAAA,CAhCID,eAAe;AAAA8B,EAAA,GAAf9B,eAAe;AAkCrB,eAAeA,eAAe;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}