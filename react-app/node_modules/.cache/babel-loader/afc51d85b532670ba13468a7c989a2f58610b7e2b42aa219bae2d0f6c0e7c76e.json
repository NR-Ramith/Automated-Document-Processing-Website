{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ramith\\\\Projects\\\\Application Scanner\\\\scanner-app\\\\react-app\\\\src\\\\components\\\\AddChatbotFields.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport './AddChatbotFields.css';\nimport { getNewTemplateId } from './values';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddChatbotFields = () => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestion, setCurrentQuestion] = useState({\n    id: 1,\n    callValidations: [],\n    options: []\n  });\n  const [optionsText, setOptionsText] = useState('');\n  const [qid, setQid] = useState(2);\n  const [editingQuestion, setEditingQuestion] = useState(null);\n  const [draggedIndex, setDraggedIndex] = useState(null);\n  const [editingIndex, setEditingIndex] = useState(-1);\n  const callValidationInputRef = useRef(null);\n  const optionValueInputRef = useRef(null);\n  const optionLabelInputRef = useRef(null);\n  const navigate = useNavigate();\n  const handleQuestionChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCurrentQuestion({\n      ...currentQuestion,\n      [name]: value\n    });\n  };\n  const addQuestion = () => {\n    if (currentQuestion.text && currentQuestion.field && currentQuestion.mandatory) {\n      setQuestions([...questions, currentQuestion]);\n      setCurrentQuestion({\n        id: qid,\n        callValidations: [],\n        options: []\n      });\n      setQid(qid + 1);\n    }\n  };\n  const addCallValidation = () => {\n    if (currentQuestion.callValidations) {\n      const updatedQuestion = {\n        ...currentQuestion\n      };\n      updatedQuestion.callValidations.push('');\n      setCurrentQuestion(updatedQuestion);\n    }\n  };\n  const addOption = () => {\n    if (currentQuestion.options) {\n      const updatedQuestion = {\n        ...currentQuestion\n      };\n      updatedQuestion.options.push({\n        value: '',\n        label: ''\n      });\n      setCurrentQuestion(updatedQuestion);\n    }\n  };\n  const handleValidationChange = (index, value) => {\n    const updatedQuestion = {\n      ...currentQuestion\n    };\n    updatedQuestion.callValidations[index] = value;\n    setCurrentQuestion(updatedQuestion);\n  };\n  const handleValidationSubmit = () => {\n    if (callValidationInputRef.current.value) {\n      if (!currentQuestion.callValidations) {\n        currentQuestion.callValidations = [];\n      }\n      currentQuestion.callValidations = [...currentQuestion.callValidations, callValidationInputRef.current.value];\n      callValidationInputRef.current.value = '';\n    }\n  };\n  const handleOptionChange = (index, field, value) => {\n    const updatedQuestion = {\n      ...currentQuestion\n    };\n    updatedQuestion.options[index][field] = value;\n    setCurrentQuestion(updatedQuestion);\n  };\n  const startEditing = index => {\n    setEditingIndex(index);\n  };\n  const saveEditedQuestion = () => {\n    if (editingIndex >= 0 && editingIndex < questions.length) {\n      const updatedQuestions = [...questions];\n      updatedQuestions[editingIndex] = currentQuestion;\n      setQuestions(updatedQuestions);\n      setEditingIndex(-1);\n    }\n  };\n  const deleteQuestion = index => {\n    if (index >= 0 && index < questions.length) {\n      const updatedQuestions = [...questions];\n      updatedQuestions.splice(index, 1);\n      setQuestions(updatedQuestions);\n    }\n  };\n  const handleDragStart = index => {\n    setDraggedIndex(index);\n  };\n  const handleDragOver = index => {\n    if (draggedIndex === null || index === draggedIndex) return;\n    const updatedQuestions = [...questions];\n    const [draggedItem] = updatedQuestions.splice(draggedIndex, 1);\n    updatedQuestions.splice(index, 0, draggedItem);\n    setQuestions(updatedQuestions);\n    setDraggedIndex(index);\n  };\n  const handleDragEnd = () => {\n    setDraggedIndex(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: goBack,\n      className: \"back-button\",\n      children: \"< Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add Chatbot Fields\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-question-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"text\",\n            placeholder: \"Question Text\",\n            value: currentQuestion.text || '',\n            onChange: handleQuestionChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"field\",\n            placeholder: \"Field\",\n            value: currentQuestion.field || '',\n            onChange: handleQuestionChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"fieldLength\",\n            placeholder: \"Field Length\",\n            value: currentQuestion.fieldLength || '',\n            onChange: handleQuestionChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"mandatory\",\n            placeholder: \"Mandatory Question?\",\n            value: currentQuestion.mandatory || '',\n            onChange: handleQuestionChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"callValidation\",\n            placeholder: \"Validation to call\",\n            ref: callValidationInputRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"add-button\",\n            onClick: handleValidationSubmit,\n            children: \"Add Validation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"optionValue\",\n            placeholder: \"Option Value\",\n            value: currentQuestion.optionValue || '',\n            onChange: e => handleOptionChange(0, 'value', e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"optionLabel\",\n            placeholder: \"Option Label\",\n            value: currentQuestion.optionLabel || '',\n            onChange: e => handleOptionChange(0, 'label', e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: addOption,\n            children: \"Add Option\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: addQuestion,\n            children: \"Add Question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"questions-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"small-column\",\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"large-column\",\n              children: \"Text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"small-column\",\n              children: \"Field\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"small-column\",\n              children: \"Field Length\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"small-column\",\n              children: \"Mandatory\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"large-column\",\n              children: \"Options\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"medium-column\",\n              children: \"Call Validations\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"small-column\",\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            draggable: true,\n            onDragStart: () => handleDragStart(index),\n            onDragOver: () => handleDragOver(index),\n            onDragEnd: handleDragEnd,\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: question.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: question.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: question.field\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: question.fieldLength\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: question.mandatory\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: question.options.map((option, optionIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Value: \", option.value, \" - Label: \", option.label]\n              }, optionIndex, true, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: question.callValidations.map((validation, validationIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: validation,\n                  onChange: e => handleValidationChange(validationIndex, e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 45\n                }, this)\n              }, validationIndex, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: editingIndex === index ? /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: saveEditedQuestion,\n                  children: \"Save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 41\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => startEditing(index),\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => deleteQuestion(index),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 9\n  }, this);\n};\n_s(AddChatbotFields, \"gaCjcM+mi7DU4NotOQ+ooEcXfCE=\", false, function () {\n  return [useNavigate];\n});\n_c = AddChatbotFields;\nconst goBack = () => {\n  // Handle navigation to the previous page\n};\nexport default AddChatbotFields;\nvar _c;\n$RefreshReg$(_c, \"AddChatbotFields\");","map":{"version":3,"names":["React","useState","useRef","getNewTemplateId","useNavigate","axios","jsxDEV","_jsxDEV","AddChatbotFields","_s","questions","setQuestions","currentQuestion","setCurrentQuestion","id","callValidations","options","optionsText","setOptionsText","qid","setQid","editingQuestion","setEditingQuestion","draggedIndex","setDraggedIndex","editingIndex","setEditingIndex","callValidationInputRef","optionValueInputRef","optionLabelInputRef","navigate","handleQuestionChange","e","name","value","target","addQuestion","text","field","mandatory","addCallValidation","updatedQuestion","push","addOption","label","handleValidationChange","index","handleValidationSubmit","current","handleOptionChange","startEditing","saveEditedQuestion","length","updatedQuestions","deleteQuestion","splice","handleDragStart","handleDragOver","draggedItem","handleDragEnd","children","onClick","goBack","className","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","fieldLength","ref","optionValue","optionLabel","map","question","draggable","onDragStart","onDragOver","onDragEnd","option","optionIndex","validation","validationIndex","_c","$RefreshReg$"],"sources":["C:/Users/Ramith/Projects/Application Scanner/scanner-app/react-app/src/components/AddChatbotFields.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport './AddChatbotFields.css';\r\nimport { getNewTemplateId } from './values';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst AddChatbotFields = () => {\r\n    const [questions, setQuestions] = useState([]);\r\n    const [currentQuestion, setCurrentQuestion] = useState({\r\n        id: 1,\r\n        callValidations: [],\r\n        options: [],\r\n    });\r\n    const [optionsText, setOptionsText] = useState('');\r\n    const [qid, setQid] = useState(2);\r\n    const [editingQuestion, setEditingQuestion] = useState(null);\r\n    const [draggedIndex, setDraggedIndex] = useState(null);\r\n    const [editingIndex, setEditingIndex] = useState(-1);\r\n\r\n    const callValidationInputRef = useRef(null);\r\n    const optionValueInputRef = useRef(null);\r\n    const optionLabelInputRef = useRef(null);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const handleQuestionChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setCurrentQuestion({\r\n            ...currentQuestion,\r\n            [name]: value,\r\n        });\r\n    };\r\n\r\n    const addQuestion = () => {\r\n        if (currentQuestion.text && currentQuestion.field && currentQuestion.mandatory) {\r\n            setQuestions([...questions, currentQuestion]);\r\n            setCurrentQuestion({\r\n                id: qid,\r\n                callValidations: [],\r\n                options: [],\r\n            });\r\n            setQid(qid + 1);\r\n        }\r\n    };\r\n\r\n    const addCallValidation = () => {\r\n        if (currentQuestion.callValidations) {\r\n            const updatedQuestion = { ...currentQuestion };\r\n            updatedQuestion.callValidations.push('');\r\n            setCurrentQuestion(updatedQuestion);\r\n        }\r\n    };\r\n\r\n    const addOption = () => {\r\n        if (currentQuestion.options) {\r\n            const updatedQuestion = { ...currentQuestion };\r\n            updatedQuestion.options.push({ value: '', label: '' });\r\n            setCurrentQuestion(updatedQuestion);\r\n        }\r\n    };\r\n\r\n    const handleValidationChange = (index, value) => {\r\n        const updatedQuestion = { ...currentQuestion };\r\n        updatedQuestion.callValidations[index] = value;\r\n        setCurrentQuestion(updatedQuestion);\r\n    };\r\n\r\n    const handleValidationSubmit = () => {\r\n        if (callValidationInputRef.current.value) {\r\n            if (!currentQuestion.callValidations) {\r\n                currentQuestion.callValidations = [];\r\n            }\r\n            currentQuestion.callValidations = [\r\n                ...currentQuestion.callValidations,\r\n                callValidationInputRef.current.value\r\n            ];\r\n            callValidationInputRef.current.value = '';\r\n        }\r\n    };\r\n\r\n    const handleOptionChange = (index, field, value) => {\r\n        const updatedQuestion = { ...currentQuestion };\r\n        updatedQuestion.options[index][field] = value;\r\n        setCurrentQuestion(updatedQuestion);\r\n    };\r\n\r\n    const startEditing = (index) => {\r\n        setEditingIndex(index);\r\n    };\r\n\r\n    const saveEditedQuestion = () => {\r\n        if (editingIndex >= 0 && editingIndex < questions.length) {\r\n            const updatedQuestions = [...questions];\r\n            updatedQuestions[editingIndex] = currentQuestion;\r\n            setQuestions(updatedQuestions);\r\n            setEditingIndex(-1);\r\n        }\r\n    };\r\n\r\n    const deleteQuestion = (index) => {\r\n        if (index >= 0 && index < questions.length) {\r\n            const updatedQuestions = [...questions];\r\n            updatedQuestions.splice(index, 1);\r\n            setQuestions(updatedQuestions);\r\n        }\r\n    };\r\n\r\n    const handleDragStart = (index) => {\r\n        setDraggedIndex(index);\r\n    };\r\n\r\n    const handleDragOver = (index) => {\r\n        if (draggedIndex === null || index === draggedIndex) return;\r\n\r\n        const updatedQuestions = [...questions];\r\n        const [draggedItem] = updatedQuestions.splice(draggedIndex, 1);\r\n        updatedQuestions.splice(index, 0, draggedItem);\r\n\r\n        setQuestions(updatedQuestions);\r\n        setDraggedIndex(index);\r\n    };\r\n\r\n    const handleDragEnd = () => {\r\n        setDraggedIndex(null);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <button onClick={goBack} className=\"back-button\">\r\n                &lt; Back\r\n            </button>\r\n            <div>\r\n                <h2>Add Chatbot Fields</h2>\r\n                <div className=\"add-question-form\">\r\n                    <div className=\"input-group\">\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"text\"\r\n                            placeholder=\"Question Text\"\r\n                            value={currentQuestion.text || ''}\r\n                            onChange={handleQuestionChange}\r\n                        />\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"field\"\r\n                            placeholder=\"Field\"\r\n                            value={currentQuestion.field || ''}\r\n                            onChange={handleQuestionChange}\r\n                        />\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"fieldLength\"\r\n                            placeholder=\"Field Length\"\r\n                            value={currentQuestion.fieldLength || ''}\r\n                            onChange={handleQuestionChange}\r\n                        />\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"mandatory\"\r\n                            placeholder=\"Mandatory Question?\"\r\n                            value={currentQuestion.mandatory || ''}\r\n                            onChange={handleQuestionChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"input-group\">\r\n                        {/* <input\r\n                        type=\"text\"\r\n                        name=\"options\"\r\n                        placeholder=\"Has Options to Select?\"\r\n                        value={currentQuestion.options || ''}\r\n                        onChange={handleQuestionChange}\r\n                    /> */}\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"callValidation\"\r\n                            placeholder=\"Validation to call\"\r\n                            ref={callValidationInputRef}\r\n                        />\r\n                        <button className=\"add-button\" onClick={handleValidationSubmit}>Add Validation</button>\r\n                    </div>\r\n                    <div className=\"input-group\">\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"optionValue\"\r\n                            placeholder=\"Option Value\"\r\n                            value={currentQuestion.optionValue || ''}\r\n                            onChange={(e) =>\r\n                                handleOptionChange(0, 'value', e.target.value)\r\n                            }\r\n                        />\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"optionLabel\"\r\n                            placeholder=\"Option Label\"\r\n                            value={currentQuestion.optionLabel || ''}\r\n                            onChange={(e) =>\r\n                                handleOptionChange(0, 'label', e.target.value)\r\n                            }\r\n                        />\r\n                        <button onClick={addOption}>Add Option</button>\r\n                    </div>\r\n                    <div className=\"input-group\">\r\n                        <button onClick={addQuestion}>Add Question</button>\r\n                    </div>\r\n                </div>\r\n\r\n                <table className=\"questions-table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th className=\"small-column\">ID</th>\r\n                            <th className=\"large-column\">Text</th>\r\n                            <th className=\"small-column\">Field</th>\r\n                            <th className=\"small-column\">Field Length</th>\r\n                            <th className=\"small-column\">Mandatory</th>\r\n                            <th className=\"large-column\">Options</th>\r\n                            <th className=\"medium-column\">Call Validations</th>\r\n                            <th className=\"small-column\">Actions</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {questions.map((question, index) => (\r\n                            <tr\r\n                                key={index}\r\n                                draggable={true}\r\n                                onDragStart={() => handleDragStart(index)}\r\n                                onDragOver={() => handleDragOver(index)}\r\n                                onDragEnd={handleDragEnd}\r\n                            >\r\n                                <td>{question.id}</td>\r\n                                <td>{question.text}</td>\r\n                                <td>{question.field}</td>\r\n                                <td>{question.fieldLength}</td>\r\n                                <td>{question.mandatory}</td>\r\n                                <td>\r\n                                    {question.options.map((option, optionIndex) => (\r\n                                        <div key={optionIndex}>\r\n                                            Value: {option.value} - Label: {option.label}\r\n                                        </div>\r\n                                    ))}\r\n                                </td>\r\n                                <td>\r\n                                    {question.callValidations.map((validation, validationIndex) => (\r\n                                        <div key={validationIndex}>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                value={validation}\r\n                                                onChange={(e) =>\r\n                                                    handleValidationChange(validationIndex, e.target.value)\r\n                                                }\r\n                                            />\r\n                                        </div>\r\n                                    ))}\r\n                                </td>\r\n                                <td>\r\n                                    {editingIndex === index ? (\r\n                                        <div>\r\n                                            <button onClick={saveEditedQuestion}>Save</button>\r\n                                        </div>\r\n                                    ) : (\r\n                                        <div>\r\n                                            <button onClick={() => startEditing(index)}>Edit</button>\r\n                                            <button onClick={() => deleteQuestion(index)}>Delete</button>\r\n                                        </div>\r\n                                    )}\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst goBack = () => {\r\n    // Handle navigation to the previous page\r\n};\r\n\r\nexport default AddChatbotFields;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}