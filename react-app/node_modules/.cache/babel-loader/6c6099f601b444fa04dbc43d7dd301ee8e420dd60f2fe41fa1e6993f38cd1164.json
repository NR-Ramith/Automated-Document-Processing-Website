{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ramith\\\\Projects\\\\Application Scanner\\\\scanner-app\\\\react-app\\\\src\\\\components\\\\AddChatbotFields.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { DndProvider, useDrag, useDrop } from 'react-dnd';\nimport HTML5Backend from 'react-dnd-html5-backend';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ItemType = 'QUESTION';\nconst AddChatbotFields = () => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestion, setCurrentQuestion] = useState({\n    id: 1\n  });\n  const navigate = useNavigate();\n  const moveQuestion = (fromIndex, toIndex) => {\n    const updatedQuestions = [...questions];\n    const [movedQuestion] = updatedQuestions.splice(fromIndex, 1);\n    updatedQuestions.splice(toIndex, 0, movedQuestion);\n    setQuestions(updatedQuestions);\n  };\n  const addQuestion = () => {\n    if (currentQuestion.text && currentQuestion.field && currentQuestion.mandatory) {\n      setQuestions([...questions, currentQuestion]);\n      setCurrentQuestion({\n        id: currentQuestion.id + 1\n      });\n    }\n  };\n  const goBack = () => {\n    navigate('/createNewTemplate');\n  };\n  return /*#__PURE__*/_jsxDEV(DndProvider, {\n    backend: HTML5Backend,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: goBack,\n        className: \"back-button\",\n        children: \"< Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add Chatbot Fields\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addQuestion,\n        children: \"Add Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"questions-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"small-column\",\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"large-column\",\n              children: \"Text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: questions.map((question, index) => /*#__PURE__*/_jsxDEV(QuestionRow, {\n            question: question,\n            index: index,\n            moveQuestion: moveQuestion\n          }, question.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(AddChatbotFields, \"DVWP6JnFKZYH9bic4grTfWu2PZI=\", false, function () {\n  return [useNavigate];\n});\n_c = AddChatbotFields;\nconst QuestionRow = ({\n  question,\n  index,\n  moveQuestion\n}) => {\n  _s2();\n  const [, ref] = useDrag({\n    type: ItemType,\n    item: {\n      index\n    }\n  });\n  const [, drop] = useDrop({\n    accept: ItemType,\n    hover: draggedItem => {\n      if (draggedItem.index !== index) {\n        moveQuestion(draggedItem.index, index);\n        draggedItem.index = index;\n      }\n    }\n  });\n  ref(drop);\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: question.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: question.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n};\n_s2(QuestionRow, \"lfwUUZEDJMc44yfEAkiAYOn1N4Y=\", false, function () {\n  return [useDrag, useDrop];\n});\n_c2 = QuestionRow;\nexport default AddChatbotFields;\nvar _c, _c2;\n$RefreshReg$(_c, \"AddChatbotFields\");\n$RefreshReg$(_c2, \"QuestionRow\");","map":{"version":3,"names":["React","useState","useNavigate","DndProvider","useDrag","useDrop","HTML5Backend","jsxDEV","_jsxDEV","ItemType","AddChatbotFields","_s","questions","setQuestions","currentQuestion","setCurrentQuestion","id","navigate","moveQuestion","fromIndex","toIndex","updatedQuestions","movedQuestion","splice","addQuestion","text","field","mandatory","goBack","backend","children","onClick","className","fileName","_jsxFileName","lineNumber","columnNumber","map","question","index","QuestionRow","_c","_s2","ref","type","item","drop","accept","hover","draggedItem","_c2","$RefreshReg$"],"sources":["C:/Users/Ramith/Projects/Application Scanner/scanner-app/react-app/src/components/AddChatbotFields.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { DndProvider, useDrag, useDrop } from 'react-dnd';\r\nimport HTML5Backend from 'react-dnd-html5-backend';\r\n\r\nconst ItemType = 'QUESTION';\r\n\r\nconst AddChatbotFields = () => {\r\n    const [questions, setQuestions] = useState([]);\r\n    const [currentQuestion, setCurrentQuestion] = useState({ id: 1 });\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const moveQuestion = (fromIndex, toIndex) => {\r\n        const updatedQuestions = [...questions];\r\n        const [movedQuestion] = updatedQuestions.splice(fromIndex, 1);\r\n        updatedQuestions.splice(toIndex, 0, movedQuestion);\r\n        setQuestions(updatedQuestions);\r\n    };\r\n\r\n    const addQuestion = () => {\r\n        if (currentQuestion.text && currentQuestion.field && currentQuestion.mandatory) {\r\n            setQuestions([...questions, currentQuestion]);\r\n            setCurrentQuestion({ id: currentQuestion.id + 1 });\r\n        }\r\n    };\r\n\r\n    const goBack = () => {\r\n        navigate('/createNewTemplate');\r\n    };\r\n\r\n    return (\r\n        <DndProvider backend={HTML5Backend}>\r\n            <div>\r\n                <button onClick={goBack} className=\"back-button\">&lt; Back</button>\r\n                <h2>Add Chatbot Fields</h2>\r\n                {/* Input fields for question properties... */}\r\n                <button onClick={addQuestion}>Add Question</button>\r\n                <table className=\"questions-table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th className=\"small-column\">ID</th>\r\n                            <th className=\"large-column\">Text</th>\r\n                            {/* Add other table headers... */}\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {questions.map((question, index) => (\r\n                            <QuestionRow\r\n                                key={question.id}\r\n                                question={question}\r\n                                index={index}\r\n                                moveQuestion={moveQuestion}\r\n                            />\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </DndProvider>\r\n    );\r\n};\r\n\r\nconst QuestionRow = ({ question, index, moveQuestion }) => {\r\n    const [, ref] = useDrag({\r\n        type: ItemType,\r\n        item: { index },\r\n    });\r\n\r\n    const [, drop] = useDrop({\r\n        accept: ItemType,\r\n        hover: (draggedItem) => {\r\n            if (draggedItem.index !== index) {\r\n                moveQuestion(draggedItem.index, index);\r\n                draggedItem.index = index;\r\n            }\r\n        },\r\n    });\r\n\r\n    ref(drop);\r\n\r\n    return (\r\n        <tr>\r\n            <td>{question.id}</td>\r\n            <td>{question.text}</td>\r\n            {/* Render other table cells... */}\r\n        </tr>\r\n    );\r\n};\r\n\r\nexport default AddChatbotFields;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}