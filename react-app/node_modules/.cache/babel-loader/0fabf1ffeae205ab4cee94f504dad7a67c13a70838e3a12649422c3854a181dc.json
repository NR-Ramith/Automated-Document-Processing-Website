{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ramith\\\\Projects\\\\Application Scanner\\\\scanner-app\\\\src\\\\components\\\\ChatBot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './style.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatBot = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [name, setName] = useState('');\n  const [personalNumber, setPersonalNumber] = useState('');\n  const [fatherName, setFatherName] = useState('');\n  const [fatherNumber, setFatherNumber] = useState('');\n  const [motherName, setMotherName] = useState('');\n  const [motherNumber, setMotherNumber] = useState('');\n  const [guardianName, setGuardianName] = useState('');\n  const [guardianNumber, setGuardianNumber] = useState('');\n  const [dob, setDob] = useState('');\n  const [date, setDate] = useState('');\n  const [address, setAddress] = useState('');\n  const [city, setCity] = useState('');\n  const [state, setState] = useState('');\n  const [nationality, setNationality] = useState('');\n  const [postalCode, setPostalCode] = useState('');\n  const [voiceInput, setVoiceInput] = useState('');\n  const inputRef = useRef(null);\n  const [userInputs, setUserInputs] = useState([]);\n  const questions = [{\n    id: 1,\n    text: 'What is your name?',\n    field: 'name'\n  }, {\n    id: 2,\n    text: 'What is your personal number?',\n    field: 'personalNumber'\n  }, {\n    id: 3,\n    text: \"What is your father's name?\",\n    field: 'fatherName'\n  }\n  // { id: 4, text: \"What is your father's number?\", field: 'fatherNumber' },\n  // { id: 5, text: \"What is your mother's name?\", field: 'motherName' },\n  // { id: 6, text: \"What is your mother's number?\", field: 'motherNumber' },\n  // { id: 7, text: \"What is your guardian's name?\", field: 'guardianName' },\n  // { id: 8, text: \"What is your guardian's number?\", field: 'guardianNumber' },\n  // { id: 9, text: 'What is your date of birth?', field: 'dob' },\n  // { id: 10, text: 'What is the current date?', field: 'date' },\n  // { id: 11, text: 'What is your address?', field: 'address' },\n  // { id: 12, text: 'What is your city?', field: 'city' },\n  // { id: 13, text: 'What is your state?', field: 'state' },\n  // { id: 14, text: 'What is your nationality?', field: 'nationality' },\n  // { id: 15, text: 'What is your postal code?', field: 'postalCode' },\n  ];\n\n  const handleVoiceInput = event => {\n    const transcript = event.results[0][0].transcript;\n    setVoiceInput(transcript);\n  };\n  const handleVoiceError = event => {\n    console.log('Voice recognition error:', event.error);\n  };\n  const readOutText = text => {\n    const utterance = new SpeechSynthesisUtterance(text);\n    window.speechSynthesis.speak(utterance);\n  };\n  const startVoiceRecognition = () => {\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    const recognition = new SpeechRecognition();\n    recognition.interimResults = false;\n    recognition.lang = 'en-US';\n    recognition.addEventListener('result', handleVoiceInput);\n    recognition.addEventListener('error', handleVoiceError);\n    recognition.start();\n  };\n  const stopVoiceRecognition = () => {\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    const recognition = new SpeechRecognition();\n    recognition.stop();\n  };\n  const handleUserInput = async event => {\n    event.preventDefault();\n    // console.log('Handle User Input');\n    // console.log('Data:', { name, address, dob });\n    const userInput = voiceInput || inputRef.current.value; // Use voiceInput if available, otherwise use text input\n    // Remove trailing full stop if it exists\n    userInput = userInput.replace(/\\.$/, '');\n    console.log(usr);\n    const currentQuestion = questions[currentQuestionIndex];\n\n    // Validation for personalNumber\n    if (currentQuestion.field === 'personalNumber') {\n      if (userInput.length !== 10 || !/^\\d+(\\.)?$/.test(userInput)) {\n        const invalidMessage = \"Invalid Number. Please enter a 10-digit numeric number.\";\n        const invalidMessageObj = {\n          text: invalidMessage,\n          isUser: false\n        };\n        setMessages([...messages, invalidMessageObj]);\n        readOutText(invalidMessage);\n        return; // Stop further processing\n      }\n    }\n\n    // Capture the user's input for the current field\n    switch (currentQuestion.field) {\n      case 'name':\n        setName(userInput);\n        break;\n      case 'personalNumber':\n        setPersonalNumber(userInput);\n        break;\n      case 'fatherName':\n        setFatherName(userInput);\n        break;\n      case 'fatherNumber':\n        setFatherNumber(userInput);\n        break;\n      case 'motherName':\n        setMotherName(userInput);\n        break;\n      case 'motherNumber':\n        setMotherNumber(userInput);\n        break;\n      case 'guardianName':\n        setGuardianName(userInput);\n        break;\n      case 'guardianNumber':\n        setGuardianNumber(userInput);\n        break;\n      case 'dob':\n        setDob(userInput);\n        break;\n      case 'date':\n        setDate(userInput);\n        break;\n      case 'address':\n        setAddress(userInput);\n        break;\n      case 'city':\n        setCity(userInput);\n        break;\n      case 'state':\n        setState(userInput);\n        break;\n      case 'nationality':\n        setNationality(userInput);\n        break;\n      case 'postalCode':\n        setPostalCode(userInput);\n        break;\n      default:\n        break;\n    }\n\n    // Add the user's input to the messages\n    const updatedMessages = [...messages, {\n      text: userInput,\n      isUser: true\n    }];\n    setMessages(updatedMessages);\n    setVoiceInput('');\n\n    // Move to the next field or end the conversation\n    if (currentQuestionIndex + 1 < questions.length) {\n      // Ask the next question\n      const nextQuestion = questions[currentQuestionIndex + 1];\n      const nextQuestionMessage = {\n        text: nextQuestion.text,\n        isUser: false\n      };\n      setMessages([...updatedMessages, nextQuestionMessage]);\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n\n      // Read out the next question\n      readOutText(nextQuestion.text);\n    } else {\n      // Conversation ended, you can handle this however you want\n      const endMessage = {\n        text: 'Thank you for the conversation!\\n Enter your Name',\n        isUser: false\n      };\n      setMessages([...updatedMessages, endMessage]);\n      setCurrentQuestionIndex(0); // Reset to the initial question for future conversations\n      readOutText(endMessage.text);\n    }\n  };\n\n  // Use useEffect to capture the updated dob value before sending it to the server\n  useEffect(() => {\n    if (dob) {\n      // Capture the updated dob value\n      const updatedDob = dob;\n\n      // Send the user input to the server\n      const sendUserInput = async () => {\n        try {\n          await axios.post('http://localhost:3001/save', {\n            userInput: {\n              name,\n              address,\n              dob: updatedDob\n            }\n          });\n          console.log('User input saved successfully');\n\n          // Add the user inputs to the userInputs array\n          const newInput = {\n            name,\n            address,\n            dob: updatedDob\n          };\n          setUserInputs(prevUserInputs => [...prevUserInputs, newInput]);\n\n          // Clear the input fields\n          setName('');\n          setAddress('');\n          setDob('');\n        } catch (error) {\n          console.error('Failed to save user input:', error);\n        }\n      };\n      sendUserInput();\n    }\n  }, [dob]);\n  useEffect(() => {\n    // Scroll to the bottom of the chat window whenever messages change\n    const chatWindow = document.getElementById('chat-window');\n    chatWindow.scrollTop = chatWindow.scrollHeight;\n  }, [messages]);\n  useEffect(() => {\n    // Ask the initial question when the component mounts\n    const currentQuestion = questions[currentQuestionIndex];\n    setMessages([...messages, {\n      text: currentQuestion.text,\n      isUser: false\n    }]);\n    readOutText(currentQuestion.text); // Read out the initial question\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"ChatBot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"chat-window\",\n      className: \"chat-window\",\n      children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.isUser ? 'user' : 'bot'}`,\n        children: message.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 11\n      }, this)), userInputs.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message bot\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Collected Inputs:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 13\n        }, this), userInputs.map((input, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 17\n          }, this), \" \", input.name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Address:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 17\n          }, this), \" \", input.address, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Date of Birth:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 17\n          }, this), \" \", input.dob, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleUserInput,\n      className: \"input-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        ref: inputRef,\n        value: voiceInput,\n        onChange: e => setVoiceInput(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"voice-recognition\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startVoiceRecognition,\n        children: \"Start Voice Recognition\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: stopVoiceRecognition,\n        children: \"Stop Voice Recognition\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 231,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatBot, \"4a/YLmVJ+FNPuTFFkjnZYsVyids=\");\n_c = ChatBot;\nexport default ChatBot;\nvar _c;\n$RefreshReg$(_c, \"ChatBot\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","jsxDEV","_jsxDEV","ChatBot","_s","messages","setMessages","currentQuestionIndex","setCurrentQuestionIndex","name","setName","personalNumber","setPersonalNumber","fatherName","setFatherName","fatherNumber","setFatherNumber","motherName","setMotherName","motherNumber","setMotherNumber","guardianName","setGuardianName","guardianNumber","setGuardianNumber","dob","setDob","date","setDate","address","setAddress","city","setCity","state","setState","nationality","setNationality","postalCode","setPostalCode","voiceInput","setVoiceInput","inputRef","userInputs","setUserInputs","questions","id","text","field","handleVoiceInput","event","transcript","results","handleVoiceError","console","log","error","readOutText","utterance","SpeechSynthesisUtterance","window","speechSynthesis","speak","startVoiceRecognition","SpeechRecognition","webkitSpeechRecognition","recognition","interimResults","lang","addEventListener","start","stopVoiceRecognition","stop","handleUserInput","preventDefault","userInput","current","value","replace","usr","currentQuestion","length","test","invalidMessage","invalidMessageObj","isUser","updatedMessages","nextQuestion","nextQuestionMessage","endMessage","updatedDob","sendUserInput","post","newInput","prevUserInputs","chatWindow","document","getElementById","scrollTop","scrollHeight","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","message","index","input","onSubmit","type","ref","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Ramith/Projects/Application Scanner/scanner-app/src/components/ChatBot.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport './style.css';\r\nimport axios from 'axios';\r\n\r\nconst ChatBot = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [name, setName] = useState('');\r\n  const [personalNumber, setPersonalNumber] = useState('');\r\n  const [fatherName, setFatherName] = useState('');\r\n  const [fatherNumber, setFatherNumber] = useState('');\r\n  const [motherName, setMotherName] = useState('');\r\n  const [motherNumber, setMotherNumber] = useState('');\r\n  const [guardianName, setGuardianName] = useState('');\r\n  const [guardianNumber, setGuardianNumber] = useState('');\r\n  const [dob, setDob] = useState('');\r\n  const [date, setDate] = useState('');\r\n  const [address, setAddress] = useState('');\r\n  const [city, setCity] = useState('');\r\n  const [state, setState] = useState('');\r\n  const [nationality, setNationality] = useState('');\r\n  const [postalCode, setPostalCode] = useState('');\r\n  const [voiceInput, setVoiceInput] = useState('');\r\n  const inputRef = useRef(null);\r\n  const [userInputs, setUserInputs] = useState([]);\r\n\r\n  const questions = [\r\n    { id: 1, text: 'What is your name?', field: 'name' },\r\n    { id: 2, text: 'What is your personal number?', field: 'personalNumber' },\r\n    { id: 3, text: \"What is your father's name?\", field: 'fatherName' },\r\n    // { id: 4, text: \"What is your father's number?\", field: 'fatherNumber' },\r\n    // { id: 5, text: \"What is your mother's name?\", field: 'motherName' },\r\n    // { id: 6, text: \"What is your mother's number?\", field: 'motherNumber' },\r\n    // { id: 7, text: \"What is your guardian's name?\", field: 'guardianName' },\r\n    // { id: 8, text: \"What is your guardian's number?\", field: 'guardianNumber' },\r\n    // { id: 9, text: 'What is your date of birth?', field: 'dob' },\r\n    // { id: 10, text: 'What is the current date?', field: 'date' },\r\n    // { id: 11, text: 'What is your address?', field: 'address' },\r\n    // { id: 12, text: 'What is your city?', field: 'city' },\r\n    // { id: 13, text: 'What is your state?', field: 'state' },\r\n    // { id: 14, text: 'What is your nationality?', field: 'nationality' },\r\n    // { id: 15, text: 'What is your postal code?', field: 'postalCode' },\r\n  ];\r\n\r\n  const handleVoiceInput = (event) => {\r\n    const transcript = event.results[0][0].transcript;\r\n    setVoiceInput(transcript);\r\n  };\r\n\r\n  const handleVoiceError = (event) => {\r\n    console.log('Voice recognition error:', event.error);\r\n  };\r\n\r\n  const readOutText = (text) => {\r\n    const utterance = new SpeechSynthesisUtterance(text);\r\n    window.speechSynthesis.speak(utterance);\r\n  };\r\n\r\n  const startVoiceRecognition = () => {\r\n    const SpeechRecognition =\r\n      window.SpeechRecognition || window.webkitSpeechRecognition;\r\n    const recognition = new SpeechRecognition();\r\n    recognition.interimResults = false;\r\n    recognition.lang = 'en-US';\r\n    recognition.addEventListener('result', handleVoiceInput);\r\n    recognition.addEventListener('error', handleVoiceError);\r\n    recognition.start();\r\n  };\r\n\r\n  const stopVoiceRecognition = () => {\r\n    const SpeechRecognition =\r\n      window.SpeechRecognition || window.webkitSpeechRecognition;\r\n    const recognition = new SpeechRecognition();\r\n    recognition.stop();\r\n  };\r\n\r\n  const handleUserInput = async (event) => {\r\n    event.preventDefault();\r\n    // console.log('Handle User Input');\r\n    // console.log('Data:', { name, address, dob });\r\n    const userInput = voiceInput || inputRef.current.value; // Use voiceInput if available, otherwise use text input\r\n    // Remove trailing full stop if it exists\r\n    userInput = userInput.replace(/\\.$/, '');\r\n    console.log(usr)\r\n    const currentQuestion = questions[currentQuestionIndex];\r\n\r\n    // Validation for personalNumber\r\n    if (currentQuestion.field === 'personalNumber') {\r\n      if (userInput.length !== 10 || !/^\\d+(\\.)?$/.test(userInput)) {\r\n        const invalidMessage = \"Invalid Number. Please enter a 10-digit numeric number.\";\r\n        const invalidMessageObj = { text: invalidMessage, isUser: false };\r\n\r\n        setMessages([...messages, invalidMessageObj]);\r\n        readOutText(invalidMessage);\r\n        return; // Stop further processing\r\n      }\r\n    }\r\n\r\n    // Capture the user's input for the current field\r\n    switch (currentQuestion.field) {\r\n      case 'name':\r\n        setName(userInput);\r\n        break;\r\n      case 'personalNumber':\r\n        setPersonalNumber(userInput);\r\n        break;\r\n      case 'fatherName':\r\n        setFatherName(userInput);\r\n        break;\r\n      case 'fatherNumber':\r\n        setFatherNumber(userInput);\r\n        break;\r\n      case 'motherName':\r\n        setMotherName(userInput);\r\n        break;\r\n      case 'motherNumber':\r\n        setMotherNumber(userInput);\r\n        break;\r\n      case 'guardianName':\r\n        setGuardianName(userInput);\r\n        break;\r\n      case 'guardianNumber':\r\n        setGuardianNumber(userInput);\r\n        break;\r\n      case 'dob':\r\n        setDob(userInput);\r\n        break;\r\n      case 'date':\r\n        setDate(userInput);\r\n        break;\r\n      case 'address':\r\n        setAddress(userInput);\r\n        break;\r\n      case 'city':\r\n        setCity(userInput);\r\n        break;\r\n      case 'state':\r\n        setState(userInput);\r\n        break;\r\n      case 'nationality':\r\n        setNationality(userInput);\r\n        break;\r\n      case 'postalCode':\r\n        setPostalCode(userInput);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    // Add the user's input to the messages\r\n    const updatedMessages = [\r\n      ...messages,\r\n      { text: userInput, isUser: true },\r\n    ];\r\n    setMessages(updatedMessages);\r\n    setVoiceInput('');\r\n\r\n    // Move to the next field or end the conversation\r\n    if (currentQuestionIndex + 1 < questions.length) {\r\n      // Ask the next question\r\n      const nextQuestion = questions[currentQuestionIndex + 1];\r\n      const nextQuestionMessage = { text: nextQuestion.text, isUser: false };\r\n      setMessages([...updatedMessages, nextQuestionMessage]);\r\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\r\n\r\n      // Read out the next question\r\n      readOutText(nextQuestion.text);\r\n    } else {\r\n      // Conversation ended, you can handle this however you want\r\n      const endMessage = {\r\n        text: 'Thank you for the conversation!\\n Enter your Name',\r\n        isUser: false,\r\n      };\r\n      setMessages([...updatedMessages, endMessage]);\r\n      setCurrentQuestionIndex(0); // Reset to the initial question for future conversations\r\n      readOutText(endMessage.text);\r\n    }\r\n  };\r\n\r\n  // Use useEffect to capture the updated dob value before sending it to the server\r\n  useEffect(() => {\r\n    if (dob) {\r\n      // Capture the updated dob value\r\n      const updatedDob = dob;\r\n\r\n      // Send the user input to the server\r\n      const sendUserInput = async () => {\r\n        try {\r\n          await axios.post('http://localhost:3001/save', {\r\n            userInput: {\r\n              name,\r\n              address,\r\n              dob: updatedDob,\r\n            },\r\n          });\r\n          console.log('User input saved successfully');\r\n\r\n          // Add the user inputs to the userInputs array\r\n          const newInput = { name, address, dob: updatedDob };\r\n          setUserInputs((prevUserInputs) => [...prevUserInputs, newInput]);\r\n\r\n          // Clear the input fields\r\n          setName('');\r\n          setAddress('');\r\n          setDob('');\r\n        } catch (error) {\r\n          console.error('Failed to save user input:', error);\r\n        }\r\n      };\r\n\r\n      sendUserInput();\r\n    }\r\n  }, [dob]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    // Scroll to the bottom of the chat window whenever messages change\r\n    const chatWindow = document.getElementById('chat-window');\r\n    chatWindow.scrollTop = chatWindow.scrollHeight;\r\n  }, [messages]);\r\n\r\n  useEffect(() => {\r\n    // Ask the initial question when the component mounts\r\n    const currentQuestion = questions[currentQuestionIndex];\r\n    setMessages([...messages, { text: currentQuestion.text, isUser: false }]);\r\n    readOutText(currentQuestion.text); // Read out the initial question\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  return (\r\n    <div className=\"chatbot-container\">\r\n      <div className=\"chatbot-header\">\r\n        <h2>ChatBot</h2>\r\n      </div>\r\n      <div id=\"chat-window\" className=\"chat-window\">\r\n        {messages.map((message, index) => (\r\n          <div\r\n            key={index}\r\n            className={`message ${message.isUser ? 'user' : 'bot'}`}\r\n          >\r\n            {message.text}\r\n          </div>\r\n        ))}\r\n        {userInputs.length > 0 && (\r\n          <div className=\"message bot\">\r\n            <h4>Collected Inputs:</h4>\r\n            {userInputs.map((input, index) => (\r\n              <div key={index}>\r\n                <strong>Name:</strong> {input.name}\r\n                <br />\r\n                <strong>Address:</strong> {input.address}\r\n                <br />\r\n                <strong>Date of Birth:</strong> {input.dob}\r\n                <br />\r\n                <br />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n\r\n      </div>\r\n      <form onSubmit={handleUserInput} className=\"input-form\">\r\n        <input\r\n          type=\"text\"\r\n          ref={inputRef}\r\n          value={voiceInput}\r\n          onChange={(e) => setVoiceInput(e.target.value)}\r\n        />\r\n        <button type=\"submit\">Send</button>\r\n      </form>\r\n      <div className=\"voice-recognition\">\r\n        <button onClick={startVoiceRecognition}>Start Voice Recognition</button>\r\n        <button onClick={stopVoiceRecognition}>Stop Voice Recognition</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatBot;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAO,aAAa;AACpB,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EACnE,MAAM,CAACY,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACc,cAAc,EAAEC,iBAAiB,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACgB,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACkB,YAAY,EAAEC,eAAe,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACoB,UAAU,EAAEC,aAAa,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACsB,YAAY,EAAEC,eAAe,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACwB,YAAY,EAAEC,eAAe,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAAC0B,cAAc,EAAEC,iBAAiB,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAAC4B,GAAG,EAAEC,MAAM,CAAC,GAAG7B,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAAC8B,IAAI,EAAEC,OAAO,CAAC,GAAG/B,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACgC,OAAO,EAAEC,UAAU,CAAC,GAAGjC,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACkC,IAAI,EAAEC,OAAO,CAAC,GAAGnC,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACoC,KAAK,EAAEC,QAAQ,CAAC,GAAGrC,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACsC,WAAW,EAAEC,cAAc,CAAC,GAAGvC,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACwC,UAAU,EAAEC,aAAa,CAAC,GAAGzC,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAAC0C,UAAU,EAAEC,aAAa,CAAC,GAAG3C,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM4C,QAAQ,GAAG1C,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAM,CAAC2C,UAAU,EAAEC,aAAa,CAAC,GAAG9C,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAM+C,SAAS,GAAG,CAChB;IAAEC,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,oBAAoB;IAAEC,KAAK,EAAE;EAAO,CAAC,EACpD;IAAEF,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,+BAA+B;IAAEC,KAAK,EAAE;EAAiB,CAAC,EACzE;IAAEF,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,6BAA6B;IAAEC,KAAK,EAAE;EAAa;EAClE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAAA,CACD;;EAED,MAAMC,gBAAgB,GAAIC,KAAK,IAAK;IAClC,MAAMC,UAAU,GAAGD,KAAK,CAACE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACD,UAAU;IACjDV,aAAa,CAACU,UAAU,CAAC;EAC3B,CAAC;EAED,MAAME,gBAAgB,GAAIH,KAAK,IAAK;IAClCI,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEL,KAAK,CAACM,KAAK,CAAC;EACtD,CAAC;EAED,MAAMC,WAAW,GAAIV,IAAI,IAAK;IAC5B,MAAMW,SAAS,GAAG,IAAIC,wBAAwB,CAACZ,IAAI,CAAC;IACpDa,MAAM,CAACC,eAAe,CAACC,KAAK,CAACJ,SAAS,CAAC;EACzC,CAAC;EAED,MAAMK,qBAAqB,GAAGA,CAAA,KAAM;IAClC,MAAMC,iBAAiB,GACrBJ,MAAM,CAACI,iBAAiB,IAAIJ,MAAM,CAACK,uBAAuB;IAC5D,MAAMC,WAAW,GAAG,IAAIF,iBAAiB,CAAC,CAAC;IAC3CE,WAAW,CAACC,cAAc,GAAG,KAAK;IAClCD,WAAW,CAACE,IAAI,GAAG,OAAO;IAC1BF,WAAW,CAACG,gBAAgB,CAAC,QAAQ,EAAEpB,gBAAgB,CAAC;IACxDiB,WAAW,CAACG,gBAAgB,CAAC,OAAO,EAAEhB,gBAAgB,CAAC;IACvDa,WAAW,CAACI,KAAK,CAAC,CAAC;EACrB,CAAC;EAED,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;IACjC,MAAMP,iBAAiB,GACrBJ,MAAM,CAACI,iBAAiB,IAAIJ,MAAM,CAACK,uBAAuB;IAC5D,MAAMC,WAAW,GAAG,IAAIF,iBAAiB,CAAC,CAAC;IAC3CE,WAAW,CAACM,IAAI,CAAC,CAAC;EACpB,CAAC;EAED,MAAMC,eAAe,GAAG,MAAOvB,KAAK,IAAK;IACvCA,KAAK,CAACwB,cAAc,CAAC,CAAC;IACtB;IACA;IACA,MAAMC,SAAS,GAAGnC,UAAU,IAAIE,QAAQ,CAACkC,OAAO,CAACC,KAAK,CAAC,CAAC;IACxD;IACAF,SAAS,GAAGA,SAAS,CAACG,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;IACxCxB,OAAO,CAACC,GAAG,CAACwB,GAAG,CAAC;IAChB,MAAMC,eAAe,GAAGnC,SAAS,CAACrC,oBAAoB,CAAC;;IAEvD;IACA,IAAIwE,eAAe,CAAChC,KAAK,KAAK,gBAAgB,EAAE;MAC9C,IAAI2B,SAAS,CAACM,MAAM,KAAK,EAAE,IAAI,CAAC,YAAY,CAACC,IAAI,CAACP,SAAS,CAAC,EAAE;QAC5D,MAAMQ,cAAc,GAAG,yDAAyD;QAChF,MAAMC,iBAAiB,GAAG;UAAErC,IAAI,EAAEoC,cAAc;UAAEE,MAAM,EAAE;QAAM,CAAC;QAEjE9E,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAE8E,iBAAiB,CAAC,CAAC;QAC7C3B,WAAW,CAAC0B,cAAc,CAAC;QAC3B,OAAO,CAAC;MACV;IACF;;IAEA;IACA,QAAQH,eAAe,CAAChC,KAAK;MAC3B,KAAK,MAAM;QACTrC,OAAO,CAACgE,SAAS,CAAC;QAClB;MACF,KAAK,gBAAgB;QACnB9D,iBAAiB,CAAC8D,SAAS,CAAC;QAC5B;MACF,KAAK,YAAY;QACf5D,aAAa,CAAC4D,SAAS,CAAC;QACxB;MACF,KAAK,cAAc;QACjB1D,eAAe,CAAC0D,SAAS,CAAC;QAC1B;MACF,KAAK,YAAY;QACfxD,aAAa,CAACwD,SAAS,CAAC;QACxB;MACF,KAAK,cAAc;QACjBtD,eAAe,CAACsD,SAAS,CAAC;QAC1B;MACF,KAAK,cAAc;QACjBpD,eAAe,CAACoD,SAAS,CAAC;QAC1B;MACF,KAAK,gBAAgB;QACnBlD,iBAAiB,CAACkD,SAAS,CAAC;QAC5B;MACF,KAAK,KAAK;QACRhD,MAAM,CAACgD,SAAS,CAAC;QACjB;MACF,KAAK,MAAM;QACT9C,OAAO,CAAC8C,SAAS,CAAC;QAClB;MACF,KAAK,SAAS;QACZ5C,UAAU,CAAC4C,SAAS,CAAC;QACrB;MACF,KAAK,MAAM;QACT1C,OAAO,CAAC0C,SAAS,CAAC;QAClB;MACF,KAAK,OAAO;QACVxC,QAAQ,CAACwC,SAAS,CAAC;QACnB;MACF,KAAK,aAAa;QAChBtC,cAAc,CAACsC,SAAS,CAAC;QACzB;MACF,KAAK,YAAY;QACfpC,aAAa,CAACoC,SAAS,CAAC;QACxB;MACF;QACE;IACJ;;IAEA;IACA,MAAMW,eAAe,GAAG,CACtB,GAAGhF,QAAQ,EACX;MAAEyC,IAAI,EAAE4B,SAAS;MAAEU,MAAM,EAAE;IAAK,CAAC,CAClC;IACD9E,WAAW,CAAC+E,eAAe,CAAC;IAC5B7C,aAAa,CAAC,EAAE,CAAC;;IAEjB;IACA,IAAIjC,oBAAoB,GAAG,CAAC,GAAGqC,SAAS,CAACoC,MAAM,EAAE;MAC/C;MACA,MAAMM,YAAY,GAAG1C,SAAS,CAACrC,oBAAoB,GAAG,CAAC,CAAC;MACxD,MAAMgF,mBAAmB,GAAG;QAAEzC,IAAI,EAAEwC,YAAY,CAACxC,IAAI;QAAEsC,MAAM,EAAE;MAAM,CAAC;MACtE9E,WAAW,CAAC,CAAC,GAAG+E,eAAe,EAAEE,mBAAmB,CAAC,CAAC;MACtD/E,uBAAuB,CAACD,oBAAoB,GAAG,CAAC,CAAC;;MAEjD;MACAiD,WAAW,CAAC8B,YAAY,CAACxC,IAAI,CAAC;IAChC,CAAC,MAAM;MACL;MACA,MAAM0C,UAAU,GAAG;QACjB1C,IAAI,EAAE,mDAAmD;QACzDsC,MAAM,EAAE;MACV,CAAC;MACD9E,WAAW,CAAC,CAAC,GAAG+E,eAAe,EAAEG,UAAU,CAAC,CAAC;MAC7ChF,uBAAuB,CAAC,CAAC,CAAC,CAAC,CAAC;MAC5BgD,WAAW,CAACgC,UAAU,CAAC1C,IAAI,CAAC;IAC9B;EACF,CAAC;;EAED;EACAhD,SAAS,CAAC,MAAM;IACd,IAAI2B,GAAG,EAAE;MACP;MACA,MAAMgE,UAAU,GAAGhE,GAAG;;MAEtB;MACA,MAAMiE,aAAa,GAAG,MAAAA,CAAA,KAAY;QAChC,IAAI;UACF,MAAM1F,KAAK,CAAC2F,IAAI,CAAC,4BAA4B,EAAE;YAC7CjB,SAAS,EAAE;cACTjE,IAAI;cACJoB,OAAO;cACPJ,GAAG,EAAEgE;YACP;UACF,CAAC,CAAC;UACFpC,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;;UAE5C;UACA,MAAMsC,QAAQ,GAAG;YAAEnF,IAAI;YAAEoB,OAAO;YAAEJ,GAAG,EAAEgE;UAAW,CAAC;UACnD9C,aAAa,CAAEkD,cAAc,IAAK,CAAC,GAAGA,cAAc,EAAED,QAAQ,CAAC,CAAC;;UAEhE;UACAlF,OAAO,CAAC,EAAE,CAAC;UACXoB,UAAU,CAAC,EAAE,CAAC;UACdJ,MAAM,CAAC,EAAE,CAAC;QACZ,CAAC,CAAC,OAAO6B,KAAK,EAAE;UACdF,OAAO,CAACE,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;QACpD;MACF,CAAC;MAEDmC,aAAa,CAAC,CAAC;IACjB;EACF,CAAC,EAAE,CAACjE,GAAG,CAAC,CAAC;EAIT3B,SAAS,CAAC,MAAM;IACd;IACA,MAAMgG,UAAU,GAAGC,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC;IACzDF,UAAU,CAACG,SAAS,GAAGH,UAAU,CAACI,YAAY;EAChD,CAAC,EAAE,CAAC7F,QAAQ,CAAC,CAAC;EAEdP,SAAS,CAAC,MAAM;IACd;IACA,MAAMiF,eAAe,GAAGnC,SAAS,CAACrC,oBAAoB,CAAC;IACvDD,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAE;MAAEyC,IAAI,EAAEiC,eAAe,CAACjC,IAAI;MAAEsC,MAAM,EAAE;IAAM,CAAC,CAAC,CAAC;IACzE5B,WAAW,CAACuB,eAAe,CAACjC,IAAI,CAAC,CAAC,CAAC;EACrC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACE5C,OAAA;IAAKiG,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChClG,OAAA;MAAKiG,SAAS,EAAC,gBAAgB;MAAAC,QAAA,eAC7BlG,OAAA;QAAAkG,QAAA,EAAI;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb,CAAC,eACNtG,OAAA;MAAK2C,EAAE,EAAC,aAAa;MAACsD,SAAS,EAAC,aAAa;MAAAC,QAAA,GAC1C/F,QAAQ,CAACoG,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC3BzG,OAAA;QAEEiG,SAAS,EAAG,WAAUO,OAAO,CAACtB,MAAM,GAAG,MAAM,GAAG,KAAM,EAAE;QAAAgB,QAAA,EAEvDM,OAAO,CAAC5D;MAAI,GAHR6D,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIP,CACN,CAAC,EACD9D,UAAU,CAACsC,MAAM,GAAG,CAAC,iBACpB9E,OAAA;QAAKiG,SAAS,EAAC,aAAa;QAAAC,QAAA,gBAC1BlG,OAAA;UAAAkG,QAAA,EAAI;QAAiB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EACzB9D,UAAU,CAAC+D,GAAG,CAAC,CAACG,KAAK,EAAED,KAAK,kBAC3BzG,OAAA;UAAAkG,QAAA,gBACElG,OAAA;YAAAkG,QAAA,EAAQ;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACI,KAAK,CAACnG,IAAI,eAClCP,OAAA;YAAAmG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACNtG,OAAA;YAAAkG,QAAA,EAAQ;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACI,KAAK,CAAC/E,OAAO,eACxC3B,OAAA;YAAAmG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACNtG,OAAA;YAAAkG,QAAA,EAAQ;UAAc;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACI,KAAK,CAACnF,GAAG,eAC1CvB,OAAA;YAAAmG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACNtG,OAAA;YAAAmG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA,GAPEG,KAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAQV,CACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEE,CAAC,eACNtG,OAAA;MAAM2G,QAAQ,EAAErC,eAAgB;MAAC2B,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACrDlG,OAAA;QACE4G,IAAI,EAAC,MAAM;QACXC,GAAG,EAAEtE,QAAS;QACdmC,KAAK,EAAErC,UAAW;QAClByE,QAAQ,EAAGC,CAAC,IAAKzE,aAAa,CAACyE,CAAC,CAACC,MAAM,CAACtC,KAAK;MAAE;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CAAC,eACFtG,OAAA;QAAQ4G,IAAI,EAAC,QAAQ;QAAAV,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC,eACPtG,OAAA;MAAKiG,SAAS,EAAC,mBAAmB;MAAAC,QAAA,gBAChClG,OAAA;QAAQiH,OAAO,EAAErD,qBAAsB;QAAAsC,QAAA,EAAC;MAAuB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACxEtG,OAAA;QAAQiH,OAAO,EAAE7C,oBAAqB;QAAA8B,QAAA,EAAC;MAAsB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACpG,EAAA,CAhRID,OAAO;AAAAiH,EAAA,GAAPjH,OAAO;AAkRb,eAAeA,OAAO;AAAC,IAAAiH,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}